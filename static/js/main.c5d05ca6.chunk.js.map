{"version":3,"sources":["hoc/withAuthRedirect.js","redux/dialogs-reducer.ts","assets/images/preloader.svg","assets/images/reactIcon.png","components/Navbar/Navbar.module.css","components/Users/Users.module.css","serviceWorker.js","utils/validators/validators.js","components/Navbar/Navbar.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.ts","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/FormsControls/FormsControls.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.ts","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.ts","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.ts","redux/sidebar-reducer.ts","redux/settings-reducer.ts","redux/redux-store.js","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","App.js","hoc/withSuspense.js","index.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/Login/Login.module.css","assets/images/user.png","components/common/Paginator/Paginator.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Settings/Settings.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","this","props","to","React","connect","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","module","exports","Boolean","window","location","hostname","match","maxLength","Navbar","className","s","nav","list","item","activeClassName","activeLink","active","friends","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollow","delete","Follow","post","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","email","password","rememberMe","captcha","securityAPI","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","followingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Preloader","style","src","preloader","alt","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","button","onClick","p","selectedPage","pageNumber","key","e","User","user","unfollow","follow","photo","photos","small","userPhoto","fol","disabled","some","discription","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","compose","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","classNames","Field","validate","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","info","save","formSummaryError","Object","keys","contacts","contact","contactsEdit","contactKey","contactValue","ProfileData","isOwner","goToEditMode","fullName","contactsMenuName","document","getElementById","display","contactsMenu","contactTitle","description","tab","aboutMe","lookingForAJob","lookingForAJobDescription","edit","Contact","contactsLink","href","ProfileInfo","discriptionBlock","target","files","length","htmlFor","large","mainPhoto","initialValues","Post","img","mes","likes","addLikes","likesCount","required","maxLength50","AddNewPostForm","area","cols","rows","MyPosts","memo","postsElements","posts","postsBlock","values","addPost","newPostText","getUserProfile","profileReducer","newPost","postId","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","params","authorizedUserId","history","refreshProfile","prevProps","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","icon","loginBlock","userName","login","logout","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","getCaptchaUrl","url","authReducer","HeaderContainer","LoginReduxForm","s1","s2","s3","initialized","appReducer","sidebarReducer","blackThemeButton","sideStyle","settingsReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","app","settings","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","Settings","label","onBlackThemeButton","backgroundColor","switchOn","SettingsContainer","buttonStyle","styleArray","DialogsContainer","lazy","App","initializeApp","path","render","Suspense","fallback","exact","AppContainer","MainApp","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.c5d05ca6.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE'\r\n\r\ntype DialogType = {\r\n    id: number\r\n    name: string\r\n}\r\ntype MessageType = {\r\n    id: number\r\n    message: string\r\n}\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ] as Array<DialogType>,\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your girlfriend?'},\r\n        {id: 3, message: 'See you'},\r\n        {id: 4, message: 'I study in MIREA'},\r\n        {id: 5, message: 'Where is your car'}\r\n    ] as Array<MessageType>\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst dialogsReducer = (state = initialState, action: any): InitialStateType => {\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n           let body = action.newMessageBody;\r\n           return {\r\n               ...state,\r\n               messages: [...state.messages, {id: 7, message: body}]\r\n           }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\ntype SendMessageCreatorActionType = {\r\n    type: typeof sendMessageCreator,\r\n    newMessageBody: string\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody: string): SendMessageCreatorActionType =>\r\n    ({type: sendMessageCreator, newMessageBody})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.3ffaf718.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactIcon.580ffd26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3q2WL\",\"list\":\"Navbar_list__1sMwt\",\"friends\":\"Navbar_friends__2V8Ze\",\"item\":\"Navbar_item__2oMa_\",\"activeLink\":\"Navbar_activeLink__1sAdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__2qA9G\",\"photo\":\"Users_photo__3muwv\",\"fol\":\"Users_fol__1f0qC\",\"discription\":\"Users_discription__HYdxH\",\"name\":\"Users_name__21Ohc\",\"follow\":\"Users_follow__3Oihd\",\"unfollow\":\"Users_unfollow__3w5bA\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.list}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>News</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>Music</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={s.friends}>\r\n                 friends\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"48080886-eec4-4752-8391-b5f4271f9163\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n        getUsers(currentPage = 1, pageSize = 10) {\r\n            return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        },\r\n        unFollow(id) {\r\n            return instance.delete(`follow/${id}`)\r\n        },\r\n        Follow(id) {\r\n            return instance.post(`follow/${id}`)\r\n        },\r\n        getProfile(userId) {\r\n            return profileAPI.getProfile(userId)\r\n        }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\nimport {UserType} from \"../types/types\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOGGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [] as Array<UserType>,\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    followingInProgress: [] as Array<number>  //array of users ids\r\n};\r\n\r\ntype InitialState = typeof initialState\r\n\r\nconst usersReducer = (state = initialState, action: any): InitialState => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                followingInProgress: action.isFetching\r\n                    ? [...state.followingInProgress, action.userId]\r\n                    : state.followingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype FollowSuccessActionType = {\r\n    type: typeof FOLLOW\r\n    userId: number\r\n}\r\nexport const followSuccess = (userId: number): FollowSuccessActionType => ({type: FOLLOW, userId})\r\ntype UnfollowSuccessActionType = {\r\n    type: typeof UNFOLLOW\r\n    userId: number\r\n}\r\nexport const unfollowSuccess = (userId: number): UnfollowSuccessActionType => ({type: UNFOLLOW, userId})\r\ntype SetUsersActionType = {\r\n    type: typeof SET_USERS\r\n    users: Array<UserType>\r\n}\r\nexport const setUsers = (users: Array<UserType>): SetUsersActionType => ({type: SET_USERS, users})\r\ntype SetCurrentPageActionType = {\r\n    type: typeof SET_CURRENT_PAGE\r\n    currentPage: number\r\n}\r\nexport const setCurrentPage = (currentPage: number): SetCurrentPageActionType => ({type: SET_CURRENT_PAGE, currentPage})\r\ntype SetTotalUsersCountActionType = {\r\n    type: typeof SET_TOTAL_USERS_COUNT\r\n    count: number\r\n}\r\nexport const setTotalUsersCount = (totalUsersCount: number): SetTotalUsersCountActionType =>\r\n    ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\ntype ToggleIsFetchingActionType = {\r\n    type: typeof TOGGLE_IS_FETCHING\r\n    isFetching: boolean\r\n}\r\nexport const toggleIsFetching = (isFetching: boolean): ToggleIsFetchingActionType =>\r\n    ({type: TOGGLE_IS_FETCHING, isFetching})\r\ntype ToggleFollowingProgressActionType = {\r\n    type: typeof TOGGLE_IS_FOLLOWING_PROGRESS\r\n    isFetching: boolean\r\n    userId: number\r\n}\r\nexport const toggleFollowingProgress = (isFetching: boolean, userId: number): ToggleFollowingProgressActionType => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS, isFetching, userId})\r\n\r\n\r\nexport const requestUsers = (page: number, pageSize: number) => {\r\n    return async (dispatch: any) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch: any, userId: number, apiMethod: any, actionCreator: any) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.Follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId: number) => {\r\n    return async (dispatch: any) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <span  style={ { \"margin-left\": '20px'} }>\r\n        <img src={preloader} alt={\"\"}/>\r\n    </span>\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button className={styles.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button className={styles.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, followingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.photo}>\r\n                <NavLink to={'profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                         className={s.photo} alt={\"\"}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.fol}>\r\n                {user.followed\r\n                    ? <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              className={s.unfollow}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n\r\n                    : <button disabled={followingInProgress.some(id => id === user.id)}\r\n                              className={s.follow}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n            <div className={s.discription}>\r\n                <div className={s.name}>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, isFetching, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   pageSize={pageSize} totalItemsCount={totalUsersCount}/>\r\n        <div>\r\n            {isFetching ? <Preloader/> : null}\r\n            {users.map(u => <User user={u}\r\n                                  followingInProgress={props.followingInProgress}\r\n                                  unfollow={props.unfollow}\r\n                                  follow={props.follow}\r\n                                  key={u.id}\r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.followingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   followingInProgress={this.props.followingInProgress}\r\n                   isFetching={this.props.isFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        followingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}),\r\n    /*withAuthRedirect*/)\r\n(UsersContainer)","import React, {useState, useEffect} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span className={s.status} onDoubleClick={activateEditMode}>\r\n                    {props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport s from './../../Login/Login.module.css';\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,\r\n                            name,\r\n                            validators,\r\n                            component,\r\n                            props = {},\r\n                            text = \"\",\r\n                            classNames = []) => (\r\n    <div className={classNames[0]}>\r\n        <div className={classNames[1]}>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            />\r\n        </div>\r\n        <div className={classNames[2]}>{text}</div>\r\n    </div>\r\n)","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error, status, updateStatus}) => {\r\n    return <form className={s.form} onSubmit={handleSubmit}>\r\n        <span className={s.info}>\r\n            <div className={s.name}>\r\n                {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div>\r\n                <div>About me:</div>\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <div>Looking for a job:</div> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <div>My professional skills:</div>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div><button className={s.save}>save</button></div>\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n        </span>\r\n        <div>\r\n            My contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <div className={s.contactsEdit}>\r\n                        <div className={s.contactKey}>{key}:</div>\r\n                        <div className={s.contactValue}>{createField(\"http://\" + key + \".com\", \"contacts.\" + key, [], Input)}</div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from \"./ProfileDataForm.jsx\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <div className={s.photo}>\r\n                {isOwner &&\r\n                <input id=\"upl\" type={\"file\"} className={s.button} onChange={onMainPhotoSelected}/>}\r\n                <label htmlFor=\"upl\">\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt={\"\"}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.discription}>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       status={status} updateStatus={updateStatus}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}\r\n                                   status={status} updateStatus={updateStatus}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    const openContacts = () => {\r\n        document.getElementById('contacts').style.display = \"block\";\r\n    }\r\n    const closeContacts = () => {\r\n        document.getElementById('contacts').style.display = \"none\";\r\n    }\r\n    return <span className={s.form}>\r\n            <span className={s.info}>\r\n                 <div className={s.name}>\r\n                    {profile.fullName}\r\n                 </div>\r\n                <ProfileStatusWithHooks  status={status} updateStatus={updateStatus}/>\r\n                <span className={s.contacts}>\r\n                    <div className={s.contactsMenuName}\r\n                         onClick={openContacts}\r\n                         onDoubleClick={closeContacts}>\r\n                        My contacts</div>\r\n                    <div id=\"contacts\" className={s.contactsMenu}>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                        })}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n            <span className={s.description}>\r\n                <div>\r\n                     <div>•About me: </div>\r\n                     <span className={s.tab}>{profile.aboutMe}</span>\r\n                </div>\r\n                <div>\r\n                    <span>•Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                 </div>\r\n                {profile.lookingForAJob && <div>\r\n                    <div>•My professional skills:</div> <span className={s.tab}>{profile.lookingForAJobDescription}</span></div>}\r\n                {isOwner && <div>\r\n                    <button className={s.edit} onClick={goToEditMode}>Edit info</button>\r\n                </div>}\r\n            </span>\r\n        </span>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    if (contactValue) {\r\n        return <div>{contactTitle}: <a className={s.contactsLink} href={contactValue}>{contactValue}</a></div>\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n    const onClick = () => {\r\n        props.addLikes(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.img} src={userPhoto} alt={\"\"}/>\r\n            <div className={s.mes}>\r\n                {props.message}\r\n            </div>\r\n            <span className={s.likes} onClick={onClick}>\r\n                <span  className={s.count}>{props.likesCount + \" \"}</span>\r\n                likes\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.area}\r\n                       cols=\"25\"\r\n                       rows=\"4\"\r\n                       component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"Enter your post\"\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: \"profileAddPostForm\"})(addNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message}\r\n                                   likesCount={p.likesCount}\r\n                                   key={p.id}\r\n                                   id={p.id}\r\n                                   profile={props.profile}\r\n                                   addLikes={props.addLikes}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = \" \";\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nexport default MyPosts;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\nimport {PhotosType, PostType, ProfileType} from \"../types/types\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst ADD_LIKES = 'ADD_LIKES'\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'It is my first post', likesCount: 12},\r\n        {id: 2, message: 'It is my website', likesCount: 1},\r\n        {id: 3, message: 'Hi, how are you?', likesCount: 21},\r\n        {id: 4, message: 'I want to become a developer', likesCount: 11},\r\n        {id: 5, message: 'Say me about you', likesCount: 1},\r\n\r\n    ] as Array<PostType>,\r\n    profile: null as ProfileType | null,\r\n    status: \"\"\r\n};\r\n\r\nexport type InitialStateType = typeof initialState\r\n\r\nconst profileReducer = (state = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos} as ProfileType}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case ADD_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => {\r\n                    if (p.id === action.postId) {\r\n                        return {...p, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype AddPostActionCreatorActionType = {\r\n    type: typeof ADD_POST\r\n    newPostText: string\r\n}\r\nexport const addPostActionCreator = (newPostText: string): AddPostActionCreatorActionType => ({type: ADD_POST, newPostText})\r\ntype SetUserProfileActionType = {\r\n    type: typeof SET_USER_PROFILE\r\n    profile: ProfileType\r\n}\r\nexport const setUserProfile = (profile: ProfileType): SetUserProfileActionType => ({type: SET_USER_PROFILE, profile})\r\ntype SetStatusActionType = {\r\n    type: typeof SET_STATUS\r\n    status: string\r\n}\r\nexport const setStatus = (status: string): SetStatusActionType => ({type: SET_STATUS, status})\r\ntype SavePhotoSuccessActionType = {\r\n    type: typeof SAVE_PHOTO_SUCCESS\r\n    photos: PhotosType\r\n}\r\nexport const savePhotoSuccess = (photos: PhotosType): SavePhotoSuccessActionType => ({type: SAVE_PHOTO_SUCCESS, photos})\r\ntype DeletePostActionType = {\r\n    type: typeof DELETE_POST\r\n    postId: number\r\n}\r\nexport const deletePost = (postId: number): DeletePostActionType => ({type: DELETE_POST, postId})\r\ntype AddLikesActionType = {\r\n    type: typeof ADD_LIKES\r\n    postId: number\r\n}\r\nexport const addLikes = (postId: number): AddLikesActionType => ({type: ADD_LIKES, postId})\r\n\r\nexport const getUserProfile = (userId: number) => async (dispatch: any) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getStatus = (userId: number) => async (dispatch: any) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status: string) => async (dispatch: any) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file: any) => async (dispatch: any) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n\r\n}\r\nexport const saveProfile = (profile: ProfileType) => async (dispatch: any, getState: any) => {\r\n    const userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;","import MyPosts from \"./MyPosts\";\r\nimport {addLikes, addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n        addLikes: (id) => {\r\n            dispatch(addLikes(id))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n       return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}\r\n                         />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() { //общая часть didMount и didUpdate\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n                if(!userId) {\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n   withAuthRedirect)\r\n(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport icon from \"./../../assets/images/reactIcon.png\"\r\n\r\n\r\nconst Header = (props) => {\r\n    return <div className={s.header}>\r\n        <NavLink to=\"/profile/\" activeClassName={s.activeLink}>\r\n            <img\r\n                src={icon} alt={\"\"}/>\r\n        </NavLink>\r\n        <Redirect to=\"/login\" />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <NavLink to=\"/profile\" className={s.userName}>{props.login}</NavLink>\r\n                    <div className={s.logout}>\r\n                        <button onClick={props.logout} className={s.button}>log out</button>\r\n                    </div>\r\n                </div>\r\n                : <div className={s.login} >\r\n                    <NavLink to={'login'}>Log in</NavLink>\r\n                </div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null as number | null,\r\n    email: null as string | null,\r\n    login: null as string | null,\r\n    isAuth: false,\r\n    captchaUrl: null as string | null\r\n};\r\n\r\nexport type initialStateType = typeof initialState\r\n\r\nconst authReducer = (state = initialState, action: any): initialStateType => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype SetAuthUserDataActionPayloadType = {\r\n    id: number | null,\r\n    email: string | null,\r\n    login: string | null,\r\n    isAuth: boolean\r\n}\r\ntype SetAuthUserDataActionType = {\r\n    type: typeof SET_USER_DATA,\r\n    payload: SetAuthUserDataActionPayloadType\r\n}\r\n\r\nexport const setAuthUserData = (id: number | null , email: string | null, login: string | null, isAuth: boolean): SetAuthUserDataActionType =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\ntype getCaptchaUrlSuccessActionType = {\r\n    type: typeof GET_CAPTCHA_URL_SUCCESS,\r\n    payload: {captchaUrl: string}\r\n}\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl: string): getCaptchaUrlSuccessActionType =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch: any) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email: string, password: string, rememberMe: boolean, captcha:string) => async (dispatch: any) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch: any) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch: any) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n     login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport s from './../Login/Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\", [s.s1, s.s2, s.s3])}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n            <div>\r\n                <button className={s.button}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div className={s.login}>\r\n        <h2>LOG IN</h2>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\ntype InitialStateType = {\r\n    initialized: boolean,\r\n}\r\n\r\nlet initialState:  InitialStateType= {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype InitializedSuccessActionType = {\r\n    type: typeof INITIALIZED_SUCCESS // 'INITIALIZED_SUCCESS'\r\n}\r\nexport const initializedSuccess = (): InitializedSuccessActionType => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch : any) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","let initialState = {};\r\n\r\ntype InitialStateType = typeof  initialState\r\nconst sidebarReducer = (state = initialState, action: any) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const PRESS_BLACK_THEME_BUTTON = 'PRESS_BLACK_THEME_BUTTON';\r\n\r\ntype InitialStateType = {\r\n    blackThemeButton: boolean,\r\n    sideStyle: string\r\n}\r\n\r\nlet initialState: InitialStateType = {\r\n    blackThemeButton: false,\r\n    sideStyle: \"side\"\r\n};\r\n\r\n\r\n\r\nconst settingsReducer = (state: InitialStateType = initialState, action: any): InitialStateType => {\r\n    switch (action.type) {\r\n        case PRESS_BLACK_THEME_BUTTON: {\r\n            return {\r\n                ...state,\r\n                blackThemeButton: !state.blackThemeButton,\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\ntype OnBlackThemeButtonActionType = {\r\n    type: typeof PRESS_BLACK_THEME_BUTTON\r\n}\r\nexport const onBlackThemeButton = (): OnBlackThemeButtonActionType => ({type: PRESS_BLACK_THEME_BUTTON})\r\n\r\nexport default settingsReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\";\r\nimport {reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport settingsReducer from \"./settings-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    settings: settingsReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;//Chrome\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));//Chrome\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React from 'react';\r\nimport s from './../Settings/Settings.module.css';\r\nimport cn from \"classnames\";\r\n\r\nconst Settings = (props) => {\r\n    const func = () => {\r\n        if(!props.blackThemeButton){\r\n            props.onBlackThemeButton()\r\n            document.getElementById('side').style.backgroundColor = \"#72879c\";\r\n            document.getElementById('wrapper').style.backgroundColor = \"#586775\";\r\n        }\r\n        else {\r\n            props.onBlackThemeButton()\r\n            document.getElementById('side').style.backgroundColor = \"white\";\r\n            document.getElementById('wrapper').style.backgroundColor = \"ghostwhite\";\r\n\r\n        }\r\n    }\r\n        return (\r\n        <div className={s.settings}>\r\n            <span className={s.label}>Night theme</span>\r\n            <span onClick={func} className={cn({[s.switchOn]: props.blackThemeButton}, s.button)}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import Settings from \"./Settings\";\r\nimport {connect} from \"react-redux\";\r\nimport {onBlackThemeButton} from \"../../redux/settings-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        blackThemeButton: state.settings.blackThemeButton,\r\n        buttonStyle: state.settings.buttonStyle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onBlackThemeButton: (styleArray) => {\r\n            dispatch(onBlackThemeButton(styleArray));\r\n        }\r\n    }\r\n}\r\n\r\nconst SettingsContainer = connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n\r\nexport default SettingsContainer;","import React from 'react';\r\nimport styles from \"./App.css\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport SettingsContainer from \"./components/Settings/SettingsContainer\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if(!this.props.initialized){\r\n            return <Preloader />\r\n        }*/\r\n        return (\r\n            <div className=\"appWrapper\">\r\n                <div id=\"side\" className={this.props.sideStyle}></div>\r\n                <div className=\"head\"><HeaderContainer /></div>\r\n                <div className=\"nav\"><Navbar /></div>\r\n                <div id=\"wrapper\" className=\"appWrapperContent\">\r\n                    <Switch>               {/*dopolnenie*/}\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => <ProfileContainer/>}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route exact path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n                        <Route exact path='/settings'\r\n                               render={() => <SettingsContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <h1>404 NOT FOUND</h1>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    sideStyle: state.settings.sideStyle,\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {  //Ленивая загрузка компанента\r\n\r\n    return(props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n}","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2S7ee\",\"loginBlock\":\"Header_loginBlock__349YX\",\"userName\":\"Header_userName__TVQeU\",\"logout\":\"Header_logout__1U7Jq\",\"login\":\"Header_login__2ZaXp\",\"button\":\"Header_button__3AOAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__KJHG6\",\"error\":\"FormsControls_error__2iS7F\",\"formSummaryError\":\"FormsControls_formSummaryError__2Z5fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"login\":\"Login_login__1mx91\",\"button\":\"Login_button__y-y6T\",\"s1\":\"Login_s1__1Mhuj\",\"s2\":\"Login_s2__13kQf\",\"s3\":\"Login_s3__A7rbK\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__sV1Wk\",\"pageNumber\":\"Paginator_pageNumber__2hAk5\",\"selectedPage\":\"Paginator_selectedPage__to5Hh\",\"button\":\"Paginator_button__28PL3\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__FKWLk\",\"img\":\"Post_img__21o-o\",\"mes\":\"Post_mes__td-LE\",\"likes\":\"Post_likes__LVZOU\",\"count\":\"Post_count__vNeRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__PVv8X\",\"posts\":\"MyPosts_posts__1_mZ_\",\"button\":\"MyPosts_button__1Fkxg\",\"area\":\"MyPosts_area__lk7I7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__yplet\",\"button\":\"Settings_button__2fj6E\",\"switchOn\":\"Settings_switchOn__1Q9dc\",\"label\":\"Settings_label__3_dls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__nHaqE\",\"photo\":\"ProfileInfo_photo__2mVUa\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Jymk\",\"button\":\"ProfileInfo_button__3nRMG\",\"form\":\"ProfileInfo_form__35zYX\",\"info\":\"ProfileInfo_info__1r8Ls\",\"description\":\"ProfileInfo_description__1GUTd\",\"contacts\":\"ProfileInfo_contacts__1Z3we\",\"contactsEdit\":\"ProfileInfo_contactsEdit__2K0eB\",\"contactKey\":\"ProfileInfo_contactKey__zdFv_\",\"contactValue\":\"ProfileInfo_contactValue__3S9p6\",\"contactsLink\":\"ProfileInfo_contactsLink__JvaC6\",\"contactsMenu\":\"ProfileInfo_contactsMenu__1PsEm\",\"contactsMenuName\":\"ProfileInfo_contactsMenuName__2mjW2\",\"name\":\"ProfileInfo_name__3zy0Q\",\"status\":\"ProfileInfo_status__3WJYX\",\"tab\":\"ProfileInfo_tab__1dA_n\",\"save\":\"ProfileInfo_save__3ye6s\",\"edit\":\"ProfileInfo_edit__ccIe6\"};"],"sourceRoot":""}