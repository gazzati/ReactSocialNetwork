{"version":3,"sources":["hoc/withAuthRedirect.js","redux/dialogs-reducer.js","assets/images/preloader.svg","assets/images/reactIcon.png","components/Navbar/Navbar.module.css","components/Users/Users.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/common/FormsControls/FormsControls.js","components/Profile/ProfileInfo/ProfileDataForm.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/validators.js","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/settings-reducer.js","redux/redux-store.js","components/Settings/Settings.jsx","components/Settings/SettingsContainer.jsx","App.js","hoc/withSuspense.js","index.js","components/Header/Header.module.css","components/common/FormsControls/FormsControls.module.css","components/common/Paginator/Paginator.module.css","assets/images/user.png","components/Login/Login.module.css","components/Profile/MyPosts/Post/Post.module.css","components/Profile/MyPosts/MyPosts.module.css","components/Settings/Settings.module.css","components/Profile/ProfileInfo/ProfileInfo.module.css"],"names":["mapStateToPropsForRedirect","state","isAuth","auth","withAuthRedirect","Component","RedirectComponent","React","render","this","props","to","connect","initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","list","item","activeClassName","activeLink","active","friends","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollow","delete","Follow","post","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","saveProfile","profile","authAPI","me","login","email","password","rememberMe","captcha","logout","securityAPI","getCaptchaUrl","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","folowingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Preloader","style","backgroundColor","src","preloader","alt","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","cn","styles","paginator","button","onClick","p","selectedPage","pageNumber","key","e","User","user","unfollow","follow","photo","photos","small","userPhoto","fol","disabled","some","discription","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","componentDidMount","compose","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","classNames","Field","validate","ProfileDataFormReduxForm","reduxForm","form","handleSubmit","onSubmit","info","save","formSummaryError","Object","keys","contacts","contact","contactsEdit","contactKey","contactValue","ProfileData","isOwner","goToEditMode","fullName","contactsMenuName","document","getElementById","display","contactsMenu","Contact","contactTitle","description","tab","aboutMe","lookingForAJob","lookingForAJobDescription","edit","contactsLink","href","ProfileInfo","discriptionBlock","target","files","length","htmlFor","large","mainPhoto","initialValues","Post","img","mes","likes","addLikes","likesCount","required","maxLength50","maxLength","AddNewPostForm","area","cols","rows","MyPosts","memo","postsElements","posts","postsBlock","values","addPost","newPostText","getUserProfile","profileReducer","newPost","postId","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","refreshProfile","params","authorizedUserId","history","componentDidUpdate","prevProps","file","getState","stopSubmit","_error","Promise","reject","withRouter","Header","header","icon","loginBlock","userName","captchaUrl","setAuthUserData","payload","getCaptchaUrlSuccess","getAuthUserData","url","authReducer","HeaderContainer","LoginReduxForm","s1","s2","s3","initialized","appReducer","sidebarReducer","blackThemeButton","sideStyle","settingsReducer","styleArray","reducers","combineReducers","dialogsPage","sidebar","formReducer","app","settings","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","Settings","label","onBlackThemeButton","switchOn","SettingsContainer","buttonStyle","DialogsContainer","lazy","App","initializeApp","path","Suspense","fallback","exact","AppContainer","MainApp","ReactDOM","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fe6cd103.chunk.js","sourcesContent":["import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your girlfriend?'},\r\n        {id: 3, message: 'See you'},\r\n        {id: 4, message: 'I study in MIREA'},\r\n        {id: 5, message: 'Where is your car'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n           let body = action.newMessageBody;\r\n           return {\r\n               ...state,\r\n               messages: [...state.messages, {id: 7, message: body}]\r\n           }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.efd317d8.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactIcon.580ffd26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3q2WL\",\"list\":\"Navbar_list__1sMwt\",\"friends\":\"Navbar_friends__2V8Ze\",\"item\":\"Navbar_item__2oMa_\",\"activeLink\":\"Navbar_activeLink__1sAdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__2qA9G\",\"photo\":\"Users_photo__3muwv\",\"fol\":\"Users_fol__1f0qC\",\"discription\":\"Users_discription__HYdxH\",\"name\":\"Users_name__21Ohc\",\"follow\":\"Users_follow__3Oihd\",\"unfollow\":\"Users_unfollow__3w5bA\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.list}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>News</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>Music</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/settings\" activeClassName={s.activeLink}>Settings</NavLink>\r\n                </div>\r\n            </div>\r\n            <div className={s.friends}>\r\n                 friends\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"48080886-eec4-4752-8391-b5f4271f9163\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n        getUsers(currentPage = 1, pageSize = 10) {\r\n            return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        },\r\n        unFollow(id) {\r\n            return instance.delete(`follow/${id}`)\r\n        },\r\n        Follow(id) {\r\n            return instance.post(`follow/${id}`)\r\n        },\r\n        getProfile(userId) {\r\n            return profileAPI.getProfile(userId)\r\n        }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    },\r\n    saveProfile(profile) {\r\n        return instance.put(`profile`, profile)\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false, captcha = null) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe, captcha})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n}\r\n\r\nexport const securityAPI = {\r\n    getCaptchaUrl() {\r\n        return instance.get(`security/get-captcha-url`)\r\n    },\r\n}","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOHGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    folowingInProgress: [2, 3]\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                folowingInProgress: action.isFetching\r\n                    ? [...state.folowingInProgress, action.userId]\r\n                    : state.folowingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.Follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: '#95acc2'} }>\r\n        <img src={preloader} alt={\"\"}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\nimport cn from \"classnames\";\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={cn(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button className={styles.button} onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={cn({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button className={styles.button} onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, folowingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.photo}>\r\n                <NavLink to={'profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                         className={s.photo} alt={\"\"}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.fol}>\r\n                {user.followed\r\n                    ? <button disabled={folowingInProgress.some(id => id === user.id)}\r\n                              className={s.unfollow}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n\r\n                    : <button disabled={folowingInProgress.some(id => id === user.id)}\r\n                              className={s.follow}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n            <div className={s.discription}>\r\n                <div className={s.name}>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, isFetching, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   pageSize={pageSize} totalItemsCount={totalUsersCount}/>\r\n        <div>\r\n            {isFetching ? <Preloader/> : null}\r\n            {users.map(u => <User user={u}\r\n                                  folowingInProgress={props.folowingInProgress}\r\n                                  unfollow={props.unfollow}\r\n                                  follow={props.follow}\r\n                                  key={u.id}\r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.folowingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   folowingInProgress={this.props.folowingInProgress}\r\n                   isFetching={this.props.isFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        folowingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}),\r\n    /*withAuthRedirect*/)\r\n(UsersContainer)","import React, {useState, useEffect} from 'react';\r\nimport s from \"./ProfileInfo.module.css\";\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span className={s.status} onDoubleClick={activateEditMode}>\r\n                    {props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\nimport s from './../../Login/Login.module.css';\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder,\r\n                            name,\r\n                            validators,\r\n                            component,\r\n                            props = {},\r\n                            text = \"\",\r\n                            classNames = []) => (\r\n    <div className={classNames[0]}>\r\n        <div className={classNames[1]}>\r\n            <Field placeholder={placeholder} name={name}\r\n                   validate={validators}\r\n                   component={component}\r\n                   {...props}\r\n            />\r\n        </div>\r\n        <div className={classNames[2]}>{text}</div>\r\n    </div>\r\n)","import React from \"react\";\r\nimport s from './ProfileInfo.module.css';\r\nimport {createField, Input, Textarea} from \"../../common/FormsControls/FormsControls\";\r\nimport {reduxForm} from \"redux-form\";\r\nimport style from \"../../common/FormsControls/FormsControls.module.css\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\";\r\nimport Field from \"redux-form/lib/Field\";\r\n\r\nconst ProfileDataForm = ({profile, handleSubmit, error, status, updateStatus}) => {\r\n    return <form className={s.form} onSubmit={handleSubmit}>\r\n        <span className={s.info}>\r\n            <div className={s.name}>\r\n                {createField(\"Full name\", \"fullName\", [], Input)}\r\n            </div>\r\n            <ProfileStatusWithHooks status={status} updateStatus={updateStatus}/>\r\n            <div>\r\n                <div>About me:</div>\r\n                {createField(\"About me\", \"aboutMe\", [], Textarea)}\r\n            </div>\r\n            <div>\r\n                <div>Looking for a job:</div> {createField(\"\", \"lookingForAJob\", [], Input, {type: \"checkbox\"})}\r\n            </div>\r\n            <div>\r\n                <div>My professional skills:</div>\r\n                {createField(\"My professional skills\", \"lookingForAJobDescription\", [], Textarea)}\r\n            </div>\r\n            <div><button className={s.save}>save</button></div>\r\n            {error && <div className={style.formSummaryError}>{error}</div>}\r\n        </span>\r\n        <div>\r\n            My contacts: {Object.keys(profile.contacts).map(key => {\r\n                return <div key={key} className={s.contact}>\r\n                    <div className={s.contactsEdit}>\r\n                        <div className={s.contactKey}>{key}:</div>\r\n                        <div className={s.contactValue}>{createField(\"http://\" + key + \".com\", \"contacts.\" + key, [], Input)}</div>\r\n                    </div>\r\n                </div>\r\n            })}\r\n        </div>\r\n    </form>\r\n\r\n}\r\n\r\nconst ProfileDataFormReduxForm = reduxForm({form: 'edit-profile'})(ProfileDataForm);\r\n\r\nexport default ProfileDataFormReduxForm;","import React, {useState} from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\nimport ProfileDataForm from \"./ProfileDataForm.jsx\";\r\n\r\nconst ProfileInfo = ({profile, status, updateStatus, isOwner, savePhoto, saveProfile}) => {\r\n    let [editMode, setEditMode] = useState(false);\r\n\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n\r\n    const onSubmit = (formData) => {\r\n        saveProfile(formData).then(\r\n            () => {\r\n                setEditMode(false);\r\n            }\r\n        )\r\n    }\r\n\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <div className={s.photo}>\r\n                {isOwner &&\r\n                <input id=\"upl\" type={\"file\"} className={s.button} onChange={onMainPhotoSelected}/>}\r\n                <label htmlFor=\"upl\">\r\n                    <img src={profile.photos.large || userPhoto} className={s.mainPhoto} alt={\"\"}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.discription}>\r\n                {editMode\r\n                    ? <ProfileDataForm initialValues={profile} profile={profile} onSubmit={onSubmit}\r\n                                       status={status} updateStatus={updateStatus}/>\r\n                    : <ProfileData goToEditMode={() => {\r\n                        setEditMode(true)\r\n                    }} profile={profile} isOwner={isOwner}\r\n                                   status={status} updateStatus={updateStatus}/>}\r\n\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nconst ProfileData = ({profile, isOwner, goToEditMode, status, updateStatus}) => {\r\n    const openContacts = () => {\r\n        document.getElementById('contacts').style.display = \"block\";\r\n    }\r\n    const closeContacts = () => {\r\n        document.getElementById('contacts').style.display = \"none\";\r\n    }\r\n    return <span className={s.form}>\r\n            <span className={s.info}>\r\n                 <div className={s.name}>\r\n                    {profile.fullName}\r\n                 </div>\r\n                <ProfileStatusWithHooks  status={status} updateStatus={updateStatus}/>\r\n                <span className={s.contacts}>\r\n                    <div className={s.contactsMenuName}\r\n                         onClick={openContacts}\r\n                         onDoubleClick={closeContacts}>\r\n                        My contacts</div>\r\n                    <div id=\"contacts\" className={s.contactsMenu}>\r\n                        {Object.keys(profile.contacts).map(key => {\r\n                            return <Contact key={key} contactTitle={key} contactValue={profile.contacts[key]}/>\r\n                        })}\r\n                    </div>\r\n                </span>\r\n            </span>\r\n            <span className={s.description}>\r\n                <div>\r\n                     <div>•About me: </div>\r\n                     <span className={s.tab}>{profile.aboutMe}</span>\r\n                </div>\r\n                <div>\r\n                    <span>•Looking for a job:</span> {profile.lookingForAJob ? \"yes\" : \"no\"}\r\n                 </div>\r\n                {profile.lookingForAJob && <div>\r\n                    <div>•My professional skills:</div> <span className={s.tab}>{profile.lookingForAJobDescription}</span></div>}\r\n                {isOwner && <div>\r\n                    <button className={s.edit} onClick={goToEditMode}>Edit info</button>\r\n                </div>}\r\n            </span>\r\n        </span>\r\n}\r\n\r\nconst Contact = ({contactTitle, contactValue}) => {\r\n    if (contactValue) {\r\n        return <div>{contactTitle}: <a className={s.contactsLink} href={contactValue}>{contactValue}</a></div>\r\n    } else {\r\n        return null\r\n    }\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n    const onClick = () => {\r\n        props.addLikes(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.img} src={userPhoto} alt={\"\"}/>\r\n            <div className={s.mes}>\r\n                {props.message}\r\n            </div>\r\n            <span className={s.likes} onClick={onClick}>\r\n                <span  className={s.count}>{props.likesCount + \" \"}</span>\r\n                likes\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.area}\r\n                       cols=\"25\"\r\n                       rows=\"4\"\r\n                       component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"Enter your post\"\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: \"profileAddPostForm\"})(addNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message}\r\n                                   likesCount={p.likesCount}\r\n                                   key={p.id}\r\n                                   id={p.id}\r\n                                   profile={props.profile}\r\n                                   addLikes={props.addLikes}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = \" \";\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nexport default MyPosts;","import {profileAPI, usersAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst ADD_LIKES = 'ADD_LIKES'\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'It is my first post', likesCount: 12},\r\n        {id: 2, message: 'It is my website', likesCount: 1},\r\n        {id: 3, message: 'Hi, how are you?', likesCount: 21},\r\n        {id: 4, message: 'I want to become a developer', likesCount: 11},\r\n        {id: 5, message: 'Say me about you', likesCount: 1},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case ADD_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => {\r\n                    if (p.id === action.postId) {\r\n                        return {...p, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\nexport const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\nexport const setStatus = (status) => ({type: SET_STATUS, status})\r\nexport const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\nexport const deletePost = (postId) => ({type: DELETE_POST, postId})\r\nexport const addLikes = (postId) => ({type: ADD_LIKES, postId})\r\n\r\nexport const getUserProfile = (userId) => async (dispatch) => {\r\n    let response = await usersAPI.getProfile(userId)\r\n    dispatch(setUserProfile(response.data));\r\n\r\n}\r\nexport const getStatus = (userId) => async (dispatch) => {\r\n    let response = await profileAPI.getStatus(userId)\r\n    dispatch(setStatus(response.data));\r\n}\r\n\r\nexport const updateStatus = (status) => async (dispatch) => {\r\n    let response = await profileAPI.updateStatus(status)\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setStatus(status));\r\n    }\r\n}\r\n\r\nexport const savePhoto = (file) => async (dispatch) => {\r\n    let response = await profileAPI.savePhoto(file);\r\n    dispatch(savePhotoSuccess(response.data.data.photos));\r\n\r\n}\r\nexport const saveProfile = (profile) => async (dispatch, getState) => {\r\n    const userId = getState().auth.id;\r\n    let response = await profileAPI.saveProfile(profile);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getUserProfile(userId));\r\n    }\r\n    else {\r\n        dispatch(stopSubmit(\"edit-profile\", {_error: response.data.messages[0]}));\r\n        return Promise.reject(response.data.messages[0]);\r\n    }\r\n}\r\nexport default profileReducer;","import MyPosts from \"./MyPosts\";\r\nimport {addLikes, addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n        addLikes: (id) => {\r\n            dispatch(addLikes(id))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n       return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         saveProfile={props.saveProfile}\r\n                         updateStatus={props.updateStatus}\r\n                         />\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, saveProfile, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() { //общая часть didMount и didUpdate\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n                if(!userId) {\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}\r\n                         />\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth,\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto, saveProfile}),\r\n    withRouter,\r\n   withAuthRedirect)\r\n(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink, Redirect} from \"react-router-dom\";\r\nimport icon from \"./../../assets/images/reactIcon.png\"\r\n\r\n\r\nconst Header = (props) => {\r\n    return <div className={s.header}>\r\n        <NavLink to=\"/profile/\" activeClassName={s.activeLink}>\r\n            <img\r\n                src={icon} alt={\"\"}/>\r\n        </NavLink>\r\n        <Redirect to=\"/login\" />\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <NavLink to=\"/profile\" className={s.userName}>{props.login}</NavLink>\r\n                    <div className={s.logout}>\r\n                        <button onClick={props.logout} className={s.button}>log out</button>\r\n                    </div>\r\n                </div>\r\n                : <div className={s.login} >\r\n                    <NavLink to={'login'}>Log in</NavLink>\r\n                </div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import {authAPI, securityAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\nconst GET_CAPTCHA_URL_SUCCESS = 'GET_CAPTCHA_URL_SUCCESS';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n    captchaUrl: null\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA:\r\n        case GET_CAPTCHA_URL_SUCCESS:{\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const getCaptchaUrlSuccess = (captchaUrl) =>\r\n    ({type: GET_CAPTCHA_URL_SUCCESS, payload: {captchaUrl}})\r\n\r\n\r\n\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe, captcha) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe, captcha);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        if(response.data.resultCode === 10){\r\n            dispatch(getCaptchaUrl())\r\n        }\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const getCaptchaUrl = () => async (dispatch) => {\r\n    const response = await securityAPI.getCaptchaUrl();\r\n    const captchaUrl = response.data.url;\r\n    dispatch(getCaptchaUrlSuccess(captchaUrl))\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n     login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\nimport s from './../Login/Login.module.css';\r\n\r\nconst LoginForm = ({handleSubmit, error, captchaUrl}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\", [s.s1, s.s2, s.s3])}\r\n\r\n            {captchaUrl && <img src={captchaUrl} alt=\"\"/>}\r\n            {captchaUrl && createField(\"Symbols from image\", \"captcha\", [required], Input, {})}\r\n\r\n            {error && <div className={style.formSummaryError}>\r\n            {error}\r\n        </div>\r\n        }\r\n            <div>\r\n                <button className={s.button}>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        props.login(formData.email, formData.password, formData.rememberMe, formData.captcha)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h2>LOG IN</h2>\r\n        <LoginReduxForm onSubmit={onSubmit} captchaUrl={props.captchaUrl}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n    captchaUrl: state.auth.captchaUrl\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","const PRESS_BLACK_THEME_BUTTON = 'PRESS_BLACK_THEME_BUTTON';\r\n\r\nlet initialState = {\r\n    blackThemeButton: false,\r\n    sideStyle: \"side\"\r\n};\r\n\r\nconst settingsReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case PRESS_BLACK_THEME_BUTTON: {\r\n            return {\r\n                ...state,\r\n                blackThemeButton: !state.blackThemeButton,\r\n                sideStyle: action.styleArray[0]\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const onBlackThemeButton = (styleArray) => ({type: PRESS_BLACK_THEME_BUTTON, styleArray})\r\n\r\nexport default settingsReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\";\r\nimport {reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\nimport settingsReducer from \"./settings-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer,\r\n    settings: settingsReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;//Chrome\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));//Chrome\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React, {useState} from 'react';\r\nimport s from './../Settings/Settings.module.css';\r\nimport cn from \"classnames\";\r\nimport styles from \"../common/Paginator/Paginator.module.css\";\r\n\r\nconst Settings = (props) => {\r\n    const func = () => {\r\n        if(!props.blackThemeButton){\r\n            props.onBlackThemeButton([\"sideBlack\"]);\r\n        }\r\n        else {\r\n            props.onBlackThemeButton([\"side\"])\r\n        }\r\n    }\r\n        return (\r\n        <div className={s.settings}>\r\n            <span className={s.label}>Night theme</span>\r\n            <span onClick={func} className={cn({[s.switchOn]: props.blackThemeButton}, s.button)}></span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Settings;","import Settings from \"./Settings\";\r\nimport {connect} from \"react-redux\";\r\nimport {onBlackThemeButton} from \"../../redux/settings-reducer\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        blackThemeButton: state.settings.blackThemeButton,\r\n        buttonStyle: state.settings.buttonStyle\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        onBlackThemeButton: (styleArray) => {\r\n            dispatch(onBlackThemeButton(styleArray));\r\n        }\r\n    }\r\n}\r\n\r\nconst SettingsContainer = connect(mapStateToProps, mapDispatchToProps)(Settings);\r\n\r\nexport default SettingsContainer;","import React from 'react';\r\nimport styles from \"./App.css\";\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Route, Switch, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\nimport SettingsContainer from \"./components/Settings/SettingsContainer\";\r\n\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if(!this.props.initialized){\r\n            return <Preloader />\r\n        }*/\r\n        return (\r\n            <div className=\"appWrapper\">\r\n                <div className={this.props.sideStyle}></div>\r\n                <div className=\"head\"><HeaderContainer /></div>\r\n                <div className=\"nav\"><Navbar /></div>\r\n                <div className=\"appWrapperContent\">\r\n                    <Switch> //dopolnenie\r\n                        <Route path='/dialogs'\r\n                               render={withSuspense(DialogsContainer)}/>\r\n                        <Route path='/profile/:userId?'\r\n                               render={() => <ProfileContainer/>}/>\r\n                        <Route path='/users'\r\n                               render={() => <UsersContainer/>}/>\r\n                        <Route exact path='/login'\r\n                               render={() => <LoginPage/>}/>\r\n                        <Route exact path='/settings'\r\n                               render={() => <SettingsContainer/>}/>\r\n                        <Route path='*'\r\n                               render={() => <h1>404 NOT FOUND</h1>}/>\r\n                    </Switch>\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized,\r\n    sideStyle: state.settings.sideStyle,\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MainApp;\r\n","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {  //Ленивая загрузка компанента\r\n\r\n    return(props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n}","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2S7ee\",\"loginBlock\":\"Header_loginBlock__349YX\",\"userName\":\"Header_userName__TVQeU\",\"logout\":\"Header_logout__1U7Jq\",\"login\":\"Header_login__2ZaXp\",\"button\":\"Header_button__3AOAn\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__KJHG6\",\"error\":\"FormsControls_error__2iS7F\",\"formSummaryError\":\"FormsControls_formSummaryError__2Z5fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__sV1Wk\",\"pageNumber\":\"Paginator_pageNumber__2hAk5\",\"selectedPage\":\"Paginator_selectedPage__to5Hh\",\"button\":\"Paginator_button__28PL3\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"Login_button__y-y6T\",\"s1\":\"Login_s1__1Mhuj\",\"s2\":\"Login_s2__13kQf\",\"s3\":\"Login_s3__A7rbK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__FKWLk\",\"img\":\"Post_img__21o-o\",\"mes\":\"Post_mes__td-LE\",\"likes\":\"Post_likes__LVZOU\",\"count\":\"Post_count__vNeRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__PVv8X\",\"posts\":\"MyPosts_posts__1_mZ_\",\"button\":\"MyPosts_button__1Fkxg\",\"area\":\"MyPosts_area__lk7I7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"settings\":\"Settings_settings__yplet\",\"button\":\"Settings_button__2fj6E\",\"switchOn\":\"Settings_switchOn__1Q9dc\",\"label\":\"Settings_label__3_dls\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__nHaqE\",\"photo\":\"ProfileInfo_photo__2mVUa\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Jymk\",\"button\":\"ProfileInfo_button__3nRMG\",\"form\":\"ProfileInfo_form__35zYX\",\"info\":\"ProfileInfo_info__1r8Ls\",\"description\":\"ProfileInfo_description__1GUTd\",\"contacts\":\"ProfileInfo_contacts__1Z3we\",\"contactsEdit\":\"ProfileInfo_contactsEdit__2K0eB\",\"contactKey\":\"ProfileInfo_contactKey__zdFv_\",\"contactValue\":\"ProfileInfo_contactValue__3S9p6\",\"contactsLink\":\"ProfileInfo_contactsLink__JvaC6\",\"contactsMenu\":\"ProfileInfo_contactsMenu__1PsEm\",\"contactsMenuName\":\"ProfileInfo_contactsMenuName__2mjW2\",\"name\":\"ProfileInfo_name__3zy0Q\",\"status\":\"ProfileInfo_status__3WJYX\",\"tab\":\"ProfileInfo_tab__1dA_n\",\"save\":\"ProfileInfo_save__3ye6s\",\"edit\":\"ProfileInfo_edit__ccIe6\"};"],"sourceRoot":""}