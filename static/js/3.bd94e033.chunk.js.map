{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","item","src","userPhoto","alt","dialog","to","id","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","onKeyDown","e","cb","key","shiftKey","preventDefault","handleKeyDown","area","cols","rows","component","placeholder","button","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","dispatch","sendMessageCreator","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,sBAAsB,OAAS,0B,oBCAhND,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,yHCiB5CC,EAbI,SAACC,GAChB,OACI,yBAAKC,UAAWC,IAAEC,MACd,yBACIC,IAAKC,IACLC,IAAK,KACT,yBAAKL,UAAWC,IAAEK,QACd,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,SCH7CC,EANC,SAACX,GACb,OACI,yBAAKC,UAAWC,IAAEU,SAAUZ,EAAMY,U,2BCmDpCC,E,MAAsBC,GAAU,CAACC,KAAM,wBAAjBD,EAzBL,SAACd,GAQpB,OACI,0BAAMgB,SAAUhB,EAAMiB,aAChBC,UAAW,SAACC,GAAD,OARA,SAACA,EAAGC,GACP,UAAVD,EAAEE,MAAkC,IAAfF,EAAEG,WACvBH,EAAEI,iBACFH,KAKoBI,CAAcL,EAAGnB,EAAMiB,gBAC3C,6BACI,kBAAC,IAAD,CAAOhB,UAAWC,IAAEuB,KACbC,KAAK,KACLC,KAAK,IACLC,UAAU,WACVlB,KAAK,iBACLmB,YAAY,wBAEvB,6BACI,4BAAQ5B,UAAWC,IAAE4B,QAArB,aAODC,EAnDC,SAAC/B,GACb,IAAIgC,EAAQhC,EAAMiC,YAEdC,EAAkBF,EAAMG,QAAQC,KAAI,SAAAC,GAAC,OAAI,kBAAC,EAAD,CAAY3B,KAAM2B,EAAE3B,KAAMW,IAAKgB,EAAE5B,GAAIA,GAAI4B,EAAE5B,QACpF6B,EAAmBN,EAAMO,SAASH,KAAI,SAAAI,GAAC,OAAI,kBAAC,EAAD,CAAS5B,QAAS4B,EAAE5B,QAASS,IAAKmB,EAAE/B,QAOnF,OACI,yBAAKR,UAAWC,IAAEiC,SACd,yBAAKlC,UAAWC,IAAEuC,cACbP,GAEL,yBAAKjC,UAAWC,IAAEqC,UACd,yBAAKtC,UAAWC,IAAEU,SAAU0B,GAChC,kBAACzB,EAAD,CAAqBG,SAZT,SAAC0B,GACjB1C,EAAM2C,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,S,iCCKjBC,4BAASC,mBAdF,SAACd,GACnB,MAAO,CACHC,YAAaD,EAAMC,gBAIF,SAACc,GACtB,MAAO,CACHJ,YAAa,SAACC,GACVG,EAASC,YAAmBJ,SAK8BK,IAAvDJ,CAA0Ed","file":"static/js/3.bd94e033.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1iKbW\",\"dialogsItems\":\"Dialogs_dialogsItems__3Q0RQ\",\"messages\":\"Dialogs_messages__3dwf2\",\"message\":\"Dialogs_message__1LrPy\",\"area\":\"Dialogs_area__1ABK-\",\"button\":\"Dialogs_button__1m-Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__2gidc\",\"dialog\":\"DialogItem_dialog__1nwIt\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={userPhoto}\r\n                alt={\"\"}/>\r\n            <div className={s.dialog}>\r\n                <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.message}>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n\r\n    let handleKeyDown =  (e, cb) => {\r\n        if (e.key === 'Enter' && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            cb();\r\n        }\r\n    };\r\n    return (\r\n        <form onSubmit={props.handleSubmit}\r\n              onKeyDown={(e) => handleKeyDown(e, props.handleSubmit)}>\r\n            <div>\r\n                <Field className={s.area}\r\n                       cols=\"25\"\r\n                       rows=\"4\"\r\n                       component=\"textarea\"\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (connect(mapStateToProps, mapDispatchToProps), withAuthRedirect) (Dialogs);"],"sourceRoot":""}