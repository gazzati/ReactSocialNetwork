{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.tsx","components/Dialogs/Message/Message.tsx","components/Dialogs/AddMessageForm/AddMessageForm.tsx","components/Dialogs/Dialogs.tsx","components/Dialogs/DialogsContainer.tsx"],"names":["module","exports","DialogItem","props","className","s","item","src","userPhoto","alt","userName","to","id","name","Message","message","maxLength50","maxLengthCreator","reduxForm","form","onSubmit","handleSubmit","onKeyDown","e","cb","key","shiftKey","preventDefault","handleKeyDown","createField","required","Textarea","button","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","compose","connect","actions","withAuthRedirect"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,OAAS,0B,oBCAnLD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,SAAW,+B,yHCsB9CC,MAb0BC,GAEjC,yBAAKC,UAAWC,IAAEC,MACd,yBACIC,IAAKC,IACLC,IAAK,KACT,yBAAKL,UAAWC,IAAEK,UACd,kBAAC,IAAD,CAASC,GAAI,YAAcR,EAAMS,IAAKT,EAAMU,QCJ7CC,MANuBX,GAE9B,yBAAKC,UAAWC,IAAEU,SAAUZ,EAAMY,S,yBCF1C,MAAMC,EAAcC,YAAiB,IAiCtBC,kBAAoC,CAACC,KAAM,2BAA3CD,CA3BRf,GAUC,0BAAMiB,SAAUjB,EAAMkB,aAChBC,UAAYC,GATD,EAACA,EAAQC,KACZ,UAAVD,EAAEE,MAAkC,IAAfF,EAAEG,WACvBH,EAAEI,iBACFH,MAMoBI,CAAcL,EAAGpB,EAAMkB,eAC3C,6BACKQ,YACG,qBACI,iBACA,CAACC,IAAUd,GACXe,IACA,CAAC,OAAU,OAAQ,MAAS,MAAO,OAAU,kBAEzD,6BACI,4BAAQ3B,UAAWC,IAAE2B,QAArB,WCMDC,MAxBuB9B,IAClC,IAAI+B,EAAQ/B,EAAMgC,YAEdC,EAAkBF,EAAMG,QAAQC,IAAIC,GAAK,kBAAC,EAAD,CAAY1B,KAAM0B,EAAE1B,KAAMY,IAAKc,EAAE3B,GAAIA,GAAI2B,EAAE3B,MACpF4B,EAAmBN,EAAMO,SAASH,IAAII,GAAK,kBAAC,EAAD,CAAS3B,QAAS2B,EAAE3B,QAASU,IAAKiB,EAAE9B,MAOnF,OACI,yBAAKR,UAAWC,IAAEgC,SACd,yBAAKjC,UAAWC,IAAEsC,cACbP,GAEL,yBAAKhC,UAAWC,IAAEoC,UACd,yBAAKrC,UAAWC,IAAEU,SAAUyB,GAChC,kBAAC,EAAD,CAAgBpB,SAZHwB,IACjBzC,EAAM0C,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,S,+BCVjBC,sBACXC,YAPmBd,IACZ,CACHC,YAAaD,EAAMC,cAKE,CACrBU,YAAaI,IAAQJ,cAErBK,IAJOH,CAIYd","file":"static/js/3.defde3c2.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1iKbW\",\"dialogsItems\":\"Dialogs_dialogsItems__3Q0RQ\",\"messages\":\"Dialogs_messages__3dwf2\",\"message\":\"Dialogs_message__1LrPy\",\"button\":\"Dialogs_button__1m-Z1\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__2gidc\",\"userName\":\"DialogItem_userName__BFVC6\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\ntype PropsType = {\r\n    id: number\r\n    name: string\r\n}\r\n\r\nconst DialogItem: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={userPhoto}\r\n                alt={\"\"}/>\r\n            <div className={s.userName}>\r\n                <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\ntype PropsType = {\r\n    message: string\r\n}\r\n\r\nconst Message: React.FC<PropsType> = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\"\r\nimport {createField, GetStringKeys, Textarea} from \"../../common/FormsControls/FormsControls\"\r\nimport s from \"../Dialogs.module.css\"\r\nimport {NewMessageFormValuesType} from \"../Dialogs\"\r\nimport {InjectedFormProps, reduxForm} from \"redux-form\"\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\"\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\ntype NewMessageFormValuesKeysType = GetStringKeys<NewMessageFormValuesType>\r\ntype PropsType = {}\r\n\r\nconst AddMessageForm: React.FC<InjectedFormProps<NewMessageFormValuesType, PropsType> & PropsType>\r\n    = (props) => {\r\n\r\n    let handleKeyDown =  (e: any, cb: any) => {\r\n        if (e.key === 'Enter' && e.shiftKey === false) {\r\n            e.preventDefault();\r\n            cb();\r\n        }\r\n    };\r\n\r\n    return (\r\n        <form onSubmit={props.handleSubmit}\r\n              onKeyDown={(e) => handleKeyDown(e, props.handleSubmit)}>\r\n            <div>\r\n                {createField<NewMessageFormValuesKeysType>(\r\n                    \"Enter your message\",\r\n                        \"newMessageBody\",\r\n                        [required, maxLength50],\r\n                        Textarea,\r\n                        {'height': '70px', 'width': '80%', 'margin': '20px 0 5px 0'})}\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Send</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\n\r\nexport default reduxForm<NewMessageFormValuesType>({form: 'dialog-add-message-form'})(AddMessageForm);","import React from 'react'\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\"\r\nimport Message from \"./Message/Message\"\r\nimport { InitialStateType } from \"../../redux/dialogs-reducer\"\r\nimport AddMessageForm from \"./AddMessageForm/AddMessageForm\"\r\n\r\ntype PropsType = {\r\n    dialogsPage: InitialStateType\r\n    sendMessage: (message: string) => void\r\n}\r\n\r\nexport type NewMessageFormValuesType = {\r\n    newMessageBody: string\r\n}\r\n\r\nconst Dialogs: React.FC<PropsType> = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n    let addNewMessage = (values: {newMessageBody: string}) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.message}>{messagesElements}</div>\r\n            <AddMessageForm onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Dialogs;","import React from 'react'\r\nimport Dialogs from \"./Dialogs\";\r\nimport {actions} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\nimport {AppStateType} from \"../../redux/redux-store\";\r\n\r\nlet mapStateToProps = (state: AppStateType) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {\r\n        sendMessage: actions.sendMessage\r\n    }),\r\n        withAuthRedirect) (Dialogs) as React.ComponentType;"],"sourceRoot":""}