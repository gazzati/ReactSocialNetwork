{"version":3,"sources":["components/Dialogs/Dialogs.module.css","components/Dialogs/DialogItem/DialogItem.module.css","components/Dialogs/DialogItem/DialogItem.jsx","components/Dialogs/Message/Message.jsx","components/Dialogs/Dialogs.jsx","hoc/withAuthRedirect.js","components/Dialogs/DialogsContainer.jsx"],"names":["module","exports","DialogItem","props","className","s","item","src","userPhoto","alt","dialog","active","to","id","name","Message","message","AddMessageFormRedux","reduxForm","form","onSubmit","handleSubmit","area","cols","rows","component","placeholder","Dialogs","state","dialogsPage","dialogsElements","dialogs","map","d","key","messagesElements","messages","m","dialogsItems","values","sendMessage","newMessageBody","mapStateToPropsForRedirect","isAuth","auth","compose","connect","dispatch","sendMessageCreator","Component","RedirectComponent","React","render","this"],"mappings":"6GACAA,EAAOC,QAAU,CAAC,QAAU,yBAAyB,aAAe,8BAA8B,SAAW,0BAA0B,QAAU,yBAAyB,KAAO,wB,oBCAjLD,EAAOC,QAAU,CAAC,KAAO,yBAAyB,OAAS,6B,yHCiB5CC,MAbKC,GAEZ,yBAAKC,UAAWC,IAAEC,MACd,yBACIC,IAAKC,IACLC,IAAK,KACT,yBAAKL,UAAWC,IAAEK,OAAS,IAAML,IAAEM,QAC/B,kBAAC,IAAD,CAASC,GAAI,YAAcT,EAAMU,IAAKV,EAAMW,QCH7CC,MANEZ,GAET,yBAAKC,UAAWC,IAAEW,SAAUb,EAAMa,S,2BCE1C,MA0CMC,E,MAAsBC,GAAU,CAACC,KAAM,wBAAjBD,CAjBJf,GAEhB,0BAAMiB,SAAUjB,EAAMkB,cAClB,6BACI,kBAAC,IAAD,CAAOjB,UAAWC,IAAEiB,KACbC,KAAK,KACLC,KAAK,IACLC,UAAU,WACVX,KAAK,iBACLY,YAAY,wBAEvB,6BACI,2CAODC,MA5CExB,IACb,IAAIyB,EAAQzB,EAAM0B,YAEdC,EAAkBF,EAAMG,QAAQC,IAAIC,GAAK,kBAAC,EAAD,CAAYnB,KAAMmB,EAAEnB,KAAMoB,IAAKD,EAAEpB,GAAIA,GAAIoB,EAAEpB,MACpFsB,EAAmBP,EAAMQ,SAASJ,IAAIK,GAAK,kBAAC,EAAD,CAASrB,QAASqB,EAAErB,QAASkB,IAAKG,EAAExB,MAQnF,OACI,yBAAKT,UAAWC,IAAE0B,SACd,yBAAK3B,UAAWC,IAAEiC,cACbR,GAEL,yBAAK1B,UAAWC,IAAE+B,UACd,yBAAKhC,UAAWC,IAAEW,SAAUmB,GAChC,kBAAClB,EAAD,CAAqBG,SAZRmB,IACjBpC,EAAMqC,YAAYD,EAAOE,gBACzBF,EAAOE,eAAiB,S,yBCZhC,IAAIC,EAA8Bd,IAAD,CAC7Be,OAAQf,EAAMgB,KAAKD,S,WCeRE,4BAASC,kBAdDlB,IACZ,CACHC,YAAaD,EAAMC,cAIDkB,IACf,CACHP,YAAcC,IACVM,EAASC,YAAmBP,QDPPQ,IAE7B,MAAMC,UAA0BC,IAAMF,UAClCG,SACI,OAAKC,KAAKlD,MAAMwC,OACT,kBAACM,EAAcI,KAAKlD,OADI,kBAAC,IAAD,CAAUS,GAAG,YAOpD,OAFqCkC,kBAASJ,EAATI,CAAsCI,ICGhEL,CAA0ElB","file":"static/js/3.e9ae14cd.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"dialogs\":\"Dialogs_dialogs__1iKbW\",\"dialogsItems\":\"Dialogs_dialogsItems__3Q0RQ\",\"messages\":\"Dialogs_messages__3dwf2\",\"message\":\"Dialogs_message__1LrPy\",\"area\":\"Dialogs_area__1ABK-\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"DialogItem_item__2gidc\",\"dialog\":\"DialogItem_dialog__1nwIt\"};","import React from \"react\";\r\nimport s from './DialogItem.module.css'\r\nimport {NavLink} from \"react-router-dom\";\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\n\r\nconst DialogItem = (props) => {\r\n    return (\r\n        <div className={s.item}>\r\n            <img\r\n                src={userPhoto}\r\n                alt={\"\"}/>\r\n            <div className={s.dialog + ' ' + s.active}>\r\n                <NavLink to={\"/dialogs/\" + props.id}>{props.name}</NavLink>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default DialogItem;","import React from \"react\";\r\nimport s from './../Dialogs.module.css'\r\n\r\nconst Message = (props) => {\r\n    return (\r\n        <div className={s.message}>{props.message}</div>\r\n    )\r\n}\r\n\r\nexport default Message;","import React from \"react\";\r\nimport s from './Dialogs.module.css'\r\nimport DialogItem from \"./DialogItem/DialogItem\";\r\nimport Message from \"./Message/Message\";\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\n\r\nconst Dialogs = (props) => {\r\n    let state = props.dialogsPage;\r\n\r\n    let dialogsElements = state.dialogs.map(d => <DialogItem name={d.name} key={d.id} id={d.id}/>);\r\n    let messagesElements = state.messages.map(m => <Message message={m.message} key={m.id}/>);\r\n\r\n\r\n    let addNewMessage = (values) => {\r\n        props.sendMessage(values.newMessageBody);\r\n        values.newMessageBody = \"\";\r\n    }\r\n\r\n    return (\r\n        <div className={s.dialogs}>\r\n            <div className={s.dialogsItems}>\r\n                {dialogsElements}\r\n            </div>\r\n            <div className={s.messages}>\r\n                <div className={s.message}>{messagesElements}</div>\r\n            <AddMessageFormRedux onSubmit={addNewMessage}/>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nconst AddMessageForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.area}\r\n                       cols=\"25\"\r\n                       rows=\"4\"\r\n                       component=\"textarea\"\r\n                       name=\"newMessageBody\"\r\n                       placeholder=\"Enter your message\"/>\r\n            </div>\r\n            <div>\r\n                <button>Send</button>\r\n            </div>\r\n        </form>)\r\n}\r\n\r\nconst AddMessageFormRedux = reduxForm({form: \"dialogAddMessageForm\"})(AddMessageForm)\r\n\r\nexport default Dialogs;","import {Redirect} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport {connect} from \"react-redux\";\r\n\r\nlet mapStateToPropsForRedirect = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport const withAuthRedirect = (Component) => {\r\n\r\n    class RedirectComponent extends React.Component {\r\n        render() {\r\n            if (!this.props.isAuth) return <Redirect to=\"/login\" />;\r\n            return <Component {...this.props}/>\r\n        }\r\n    }\r\n\r\n    let ConnectedAuthRedirectComponent = connect (mapStateToPropsForRedirect) (RedirectComponent)\r\n\r\n    return ConnectedAuthRedirectComponent;\r\n}","import Dialogs from \"./Dialogs\";\r\nimport {sendMessageCreator} from \"../../redux/dialogs-reducer\";\r\nimport {connect} from \"react-redux\";\r\nimport {withAuthRedirect} from \"../../hoc/withAuthRedirect\";\r\nimport {compose} from \"redux\";\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        dialogsPage: state.dialogsPage,\r\n    }\r\n}\r\n\r\nlet mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        sendMessage: (newMessageBody) => {\r\n            dispatch(sendMessageCreator(newMessageBody));\r\n        }\r\n    }\r\n}\r\n\r\nexport default compose (connect(mapStateToProps, mapDispatchToProps), withAuthRedirect) (Dialogs);"],"sourceRoot":""}