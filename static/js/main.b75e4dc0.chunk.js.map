{"version":3,"sources":["redux/dialogs-reducer.js","assets/images/preloader.svg","assets/images/reactIcon.png","components/Navbar/Navbar.module.css","components/Users/Users.module.css","serviceWorker.js","components/Navbar/Navbar.jsx","api/api.js","utils/object-helpers.js","redux/users-reducer.js","components/common/Preloader/Preloader.js","components/common/Paginator/Paginator.jsx","components/Users/User.jsx","components/Users/Users.jsx","redux/users-selectors.js","components/Users/UsersContainer.jsx","components/Profile/ProfileInfo/ProfileStatusWithHooks.jsx","components/Profile/ProfileInfo/ProfileInfo.jsx","components/Profile/MyPosts/Post/Post.jsx","utils/validators/validators.js","components/common/FormsControls/FormsControls.js","components/Profile/MyPosts/MyPosts.jsx","redux/profile-reducer.js","components/Profile/MyPosts/MyPostsContainer.jsx","components/Profile/Profile.jsx","components/Profile/ProfileContainer.jsx","components/Header/Header.jsx","redux/auth-reducer.js","components/Header/HeaderContainer.jsx","components/Login/Login.jsx","redux/app-reducer.js","redux/sidebar-reducer.js","redux/redux-store.js","hoc/withSuspense.js","App.js","index.js","components/Profile/ProfileInfo/ProfileInfo.module.css","components/Header/Header.module.css","assets/images/user.png","components/Profile/MyPosts/Post/Post.module.css","components/common/FormsControls/FormsControls.module.css","components/Profile/MyPosts/MyPosts.module.css","components/common/Paginator/Paginator.module.css"],"names":["initialState","dialogs","id","name","messages","message","sendMessageCreator","newMessageBody","type","dialogsReducer","state","action","body","module","exports","Boolean","window","location","hostname","match","Navbar","className","s","nav","list","item","to","activeClassName","activeLink","active","friends","instance","axios","withCredentials","baseURL","headers","usersAPI","getUsers","currentPage","pageSize","get","then","response","data","unFollow","delete","Follow","post","getProfile","userId","profileAPI","getStatus","updateStatus","status","put","savePhoto","photoFile","formData","FormData","append","authAPI","me","login","email","password","rememberMe","logout","updateObjectInArray","items","itemId","objPropName","newObjProps","map","u","users","totalUsersCount","isFetching","folowingInProgress","followSuccess","unfollowSuccess","setCurrentPage","toggleIsFetching","toggleFollowingProgress","followUnfollowFlow","dispatch","apiMethod","actionCreator","a","resultCode","usersReducer","followed","count","filter","Preloader","props","style","backgroundColor","src","preloader","alt","Paginator","totalItemsCount","onPageChanged","portionSize","pagesCount","Math","ceil","pages","i","push","portionCount","useState","portionNumber","setPortionNumber","leftPortionPageNumber","rightPortionPageNumber","styles","paginator","onClick","p","selectedPage","pageNumber","key","e","User","user","unfollow","follow","photo","photos","small","userPhoto","fol","disabled","some","discription","Users","createSelector","usersPage","getPageSize","getTotalUsersCount","getCurrentPage","getIsFetching","getFollowingInProgress","UsersContainer","React","Component","this","componentDidMount","render","compose","connect","bind","page","totalCount","ProfileStatusWithHooks","editMode","setEditMode","setStatus","useEffect","onDoubleClick","onChange","currentTarget","value","autoFocus","onBlur","ProfileInfo","discriptionBlock","isOwner","button","target","files","length","for","profile","large","mainPhoto","fullName","Post","img","mes","likes","addLikes","likesCount","required","FormControl","input","meta","touched","error","children","hasError","formControl","Textarea","restProps","child","Input","createField","placeholder","validators","component","text","validate","maxLength50","maxLength","AddNewPostForm","reduxForm","form","onSubmit","handleSubmit","area","cols","rows","MyPosts","memo","postsElements","posts","postsBlock","values","addPost","newPostText","profileReducer","newPost","postId","MyPostsContainer","profilePage","addPostActionCreator","Profile","ProfileContainer","refreshProfile","params","authorizedUserId","history","getUserProfile","componentDidUpdate","prevProps","auth","isAuth","file","withRouter","Header","header","icon","loginBlock","userName","setAuthUserData","payload","getAuthUserData","authReducer","HeaderContainer","LoginReduxForm","formSummaryError","stopSubmit","_error","initialized","appReducer","sidebarReducer","reducers","combineReducers","dialogsPage","sidebar","formReducer","app","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","store","createStore","applyMiddleware","thunkMiddleware","_store_","DialogsContainer","lazy","App","initializeApp","path","Suspense","fallback","AppContainer","MainApp","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b75e4dc0.chunk.js","sourcesContent":["const SEND_MESSAGE = 'SEND-MESSAGE';\r\n\r\nlet initialState = {\r\n    dialogs: [\r\n        {id: 1, name: 'Dimych'},\r\n        {id: 2, name: 'Andrew'},\r\n        {id: 3, name: 'Sveta'},\r\n        {id: 4, name: 'Sasha'},\r\n        {id: 5, name: 'Viktor'},\r\n        {id: 6, name: 'Valera'}\r\n    ],\r\n    messages: [\r\n        {id: 1, message: 'Hi'},\r\n        {id: 2, message: 'How is your girlfriend?'},\r\n        {id: 3, message: 'See you'},\r\n        {id: 4, message: 'I study in MIREA'},\r\n        {id: 5, message: 'Where is your car'}\r\n    ]\r\n};\r\n\r\nconst dialogsReducer = (state = initialState, action) => {\r\n   switch (action.type) {\r\n       case SEND_MESSAGE:\r\n           let body = action.newMessageBody;\r\n           return {\r\n               ...state,\r\n               messages: [...state.messages, {id: 7, message: body}]\r\n           }\r\n       default:\r\n           return state;\r\n   }\r\n}\r\n\r\nexport const sendMessageCreator = (newMessageBody) => ({type: SEND_MESSAGE, newMessageBody})\r\n\r\nexport default dialogsReducer;","module.exports = __webpack_public_path__ + \"static/media/preloader.b4d4c650.svg\";","module.exports = __webpack_public_path__ + \"static/media/reactIcon.580ffd26.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"nav\":\"Navbar_nav__3q2WL\",\"list\":\"Navbar_list__1sMwt\",\"friends\":\"Navbar_friends__2V8Ze\",\"item\":\"Navbar_item__2oMa_\",\"activeLink\":\"Navbar_activeLink__1sAdL\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"user\":\"Users_user__2qA9G\",\"photo\":\"Users_photo__3muwv\",\"fol\":\"Users_fol__1f0qC\",\"discription\":\"Users_discription__HYdxH\",\"name\":\"Users_name__21Ohc\",\"follow\":\"Users_follow__3Oihd\",\"unfollow\":\"Users_unfollow__3w5bA\"};","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport s from './Navbar.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nconst Navbar = () => {\r\n    return (\r\n        <nav className={s.nav}>\r\n            <div className={s.list}>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/profile\" activeClassName={s.activeLink}>Profile</NavLink>\r\n                </div>\r\n                <div className={`${s.item} ${s.active}`}>\r\n                    <NavLink to=\"/dialogs\" activeClassName={s.activeLink}>Messages</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <NavLink to=\"/users\" activeClassName={s.activeLink}>Users</NavLink>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>News</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>Music</div>\r\n                </div>\r\n                <div className={s.item}>\r\n                    <div>Settings</div>\r\n                </div>\r\n            </div>\r\n            <div className={s.friends}>\r\n                 friends\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\nexport default Navbar;","import * as axios from \"axios\";\r\n\r\nconst instance = axios.create({\r\n    withCredentials: true,\r\n    baseURL: 'https://social-network.samuraijs.com/api/1.0/',\r\n    headers: {\r\n        \"API-KEY\": \"48080886-eec4-4752-8391-b5f4271f9163\"\r\n    }\r\n\r\n})\r\n\r\nexport const usersAPI = {\r\n        getUsers(currentPage = 1, pageSize = 10) {\r\n            return instance.get(`users?page=${currentPage}&count=${pageSize}`)\r\n                .then(response => {\r\n                    return response.data;\r\n                })\r\n        },\r\n        unFollow(id) {\r\n            return instance.delete(`follow/${id}`)\r\n        },\r\n        Follow(id) {\r\n            return instance.post(`follow/${id}`)\r\n        },\r\n        getProfile(userId) {\r\n            return profileAPI.getProfile(userId)\r\n        }\r\n\r\n}\r\n\r\nexport const profileAPI = {\r\n    getProfile(userId) {\r\n        return instance.get(`profile/` + userId)\r\n    },\r\n    getStatus(userId) {\r\n        return instance.get(`profile/status/` + userId)\r\n    },\r\n    updateStatus(status) {\r\n        return instance.put(`profile/status/`, {status: status})\r\n    },\r\n    savePhoto(photoFile) {\r\n        const formData = new FormData();\r\n        formData.append(\"image\", photoFile)\r\n        return instance.put(`profile/photo/`, formData, {\r\n            headers: {\r\n                'Content-Type': 'multipart/form-data'\r\n            }\r\n        })\r\n    }\r\n\r\n}\r\n\r\nexport const authAPI = {\r\n    me() {\r\n        return instance.get(`auth/me`)\r\n    },\r\n    login(email, password, rememberMe = false) {\r\n        return instance.post(`auth/login`, {email, password, rememberMe})\r\n    },\r\n    logout() {\r\n        return instance.delete(`auth/login`)\r\n    },\r\n\r\n}\r\n\r\n","export const updateObjectInArray = (items, itemId, objPropName, newObjProps) => {\r\n    return items.map(u => {\r\n        if (u[objPropName] === itemId) {\r\n            return {...u, ...newObjProps}\r\n        }\r\n        return u;\r\n    })\r\n}\r\n","import {usersAPI} from \"../api/api\";\r\nimport {updateObjectInArray} from \"../utils/object-helpers\";\r\n\r\nconst FOLLOW = 'FOLLOW';\r\nconst UNFOLLOW = 'UNFOLLOW';\r\nconst SET_USERS = 'SET_USERS';\r\nconst SET_CURRENT_PAGE = 'SET_CURRENT_PAGE';\r\nconst SET_TOTAL_USERS_COUNT = 'SET_TOTAL_USERS_COUNT';\r\nconst TOGGLE_IS_FETCHING = 'TOHGLE_IS_FETCHING';\r\nconst TOGGLE_IS_FOLLOWING_PROGRESS = 'TOGGLE_IS_FOLLOWING_PROGRESS'\r\n\r\nlet initialState = {\r\n    users: [],\r\n    pageSize: 10,\r\n    totalUsersCount: 0,\r\n    currentPage: 1,\r\n    isFetching: true,\r\n    folowingInProgress: [2, 3]\r\n\r\n};\r\n\r\nconst usersReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case FOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: true})\r\n            }\r\n        case UNFOLLOW:\r\n            return {\r\n                ...state,\r\n                users: updateObjectInArray(state.users, action.userId, \"id\", {followed: false})\r\n            }\r\n        case SET_USERS: {\r\n            return {...state, users: action.users}\r\n        }\r\n        case SET_CURRENT_PAGE: {\r\n            return {...state, currentPage: action.currentPage}\r\n        }\r\n        case SET_TOTAL_USERS_COUNT: {\r\n            return {...state, totalUsersCount: action.count}\r\n        }\r\n        case TOGGLE_IS_FETCHING: {\r\n            return {...state, isFetching: action.isFetching}\r\n        }\r\n        case TOGGLE_IS_FOLLOWING_PROGRESS: {\r\n            return {\r\n                ...state,\r\n                folowingInProgress: action.isFetching\r\n                    ? [...state.folowingInProgress, action.userId]\r\n                    : state.folowingInProgress.filter(id => id !== action.userId)\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const followSuccess = (userId) => ({type: FOLLOW, userId})\r\nexport const unfollowSuccess = (userId) => ({type: UNFOLLOW, userId})\r\nexport const setUsers = (users) => ({type: SET_USERS, users})\r\nexport const setCurrentPage = (currentPage) => ({type: SET_CURRENT_PAGE, currentPage})\r\nexport const setTotalUsersCount = (totalUsersCount) => ({type: SET_TOTAL_USERS_COUNT, count: totalUsersCount})\r\nexport const toggleIsFetching = (isFetching) => ({type: TOGGLE_IS_FETCHING, isFetching})\r\nexport const toggleFollowingProgress = (isFetching, userId) => ({\r\n    type: TOGGLE_IS_FOLLOWING_PROGRESS,\r\n    isFetching,\r\n    userId\r\n})\r\n\r\n\r\nexport const requestUsers = (page, pageSize) => {\r\n    return async (dispatch) => {\r\n        dispatch(toggleIsFetching(true));\r\n        dispatch(setCurrentPage(page))\r\n\r\n        let data = await usersAPI.getUsers(page, pageSize)\r\n        dispatch(toggleIsFetching(false));\r\n        dispatch(setUsers(data.items));\r\n        dispatch(setTotalUsersCount(data.totalCount))\r\n    }\r\n}\r\n\r\nconst followUnfollowFlow = async (dispatch, userId, apiMethod, actionCreator) => {\r\n    dispatch(toggleFollowingProgress(true, userId));\r\n    let response = await apiMethod(userId);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(actionCreator(userId));\r\n    }\r\n    dispatch(toggleFollowingProgress(false, userId));\r\n}\r\n\r\nexport const follow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.Follow.bind(usersAPI), followSuccess)\r\n    }\r\n}\r\n\r\n\r\nexport const unfollow = (userId) => {\r\n    return async (dispatch) => {\r\n        followUnfollowFlow(dispatch, userId, usersAPI.unFollow.bind(usersAPI), unfollowSuccess)\r\n    }\r\n}\r\n\r\nexport default usersReducer;","import React from 'react';\r\nimport preloader from \"../../../assets/images/preloader.svg\";\r\n\r\nlet Preloader = (props) => {\r\n    return <div  style={ { backgroundColor: 'ghostwhite'} }>\r\n        <img src={preloader} alt={\"\"}/>\r\n    </div>\r\n}\r\n\r\nexport default Preloader;","import React, {useState} from 'react';\r\nimport styles from \"./Paginator.module.css\";\r\n/*import cn from \"classnames\";*/\r\n\r\nlet Paginator = ({totalItemsCount, pageSize, currentPage, onPageChanged, portionSize = 10}) => {\r\n\r\n    let pagesCount = Math.ceil(totalItemsCount / pageSize);\r\n\r\n    let pages = [];\r\n    for (let i = 1; i <= pagesCount; i++) {\r\n        pages.push(i);\r\n    }\r\n\r\n    let portionCount = Math.ceil(pagesCount / portionSize);\r\n    let [portionNumber, setPortionNumber] = useState(1);\r\n    let leftPortionPageNumber = (portionNumber - 1) * portionSize + 1;\r\n    let rightPortionPageNumber = portionNumber * portionSize;\r\n\r\n\r\n    return <div className={/*cn*/(styles.paginator)}>\r\n        { portionNumber > 1 &&\r\n        <button onClick={() => { setPortionNumber(portionNumber - 1) }}>PREV</button> }\r\n\r\n            {pages\r\n                .filter(p => p >= leftPortionPageNumber && p<=rightPortionPageNumber)\r\n                .map((p) => {\r\n                return <span className={ /*cn*/({\r\n                    [styles.selectedPage]: currentPage === p\r\n                }, styles.pageNumber) }\r\n                             key={p}\r\n                             onClick={(e) => {\r\n                                 onPageChanged(p);\r\n                             }}>{p}</span>\r\n            })}\r\n        { portionCount > portionNumber &&\r\n            <button onClick={() => { setPortionNumber(portionNumber + 1) }}>NEXT</button> }\r\n\r\n\r\n    </div>\r\n}\r\n\r\nexport default Paginator;\r\n","import React from 'react';\r\nimport s from \"./Users.module.css\";\r\nimport userPhoto from '../../assets/images/user.png'\r\nimport {NavLink} from \"react-router-dom\";\r\n\r\nlet User = ({user, folowingInProgress, unfollow, follow}) => {\r\n    return (\r\n        <div className={s.user}>\r\n            <div className={s.photo}>\r\n                <NavLink to={'profile/' + user.id}>\r\n                    <img src={user.photos.small != null ? user.photos.small : userPhoto}\r\n                         className={s.photo} alt={\"\"}/>\r\n                </NavLink>\r\n            </div>\r\n            <div className={s.fol}>\r\n                {user.followed\r\n                    ? <button disabled={folowingInProgress.some(id => id === user.id)}\r\n                              className={s.unfollow}\r\n                              onClick={() => {\r\n                                  unfollow(user.id)\r\n                              }}>\r\n                        Unfollow</button>\r\n\r\n                    : <button disabled={folowingInProgress.some(id => id === user.id)}\r\n                              className={s.follow}\r\n                              onClick={() => {\r\n                                  follow(user.id)\r\n                              }}>\r\n                        Follow</button>}\r\n            </div>\r\n            <div className={s.discription}>\r\n                <div className={s.name}>{user.name}</div>\r\n                <div>{user.status}</div>\r\n            </div>\r\n        </div>)\r\n\r\n}\r\n\r\nexport default User","import React from 'react';\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\nimport Paginator from \"../common/Paginator/Paginator\";\r\nimport User from \"./User\";\r\n\r\nlet Users = ({currentPage, totalUsersCount, pageSize, onPageChanged, isFetching, users, ...props}) => {\r\n    return <div>\r\n        <Paginator currentPage={currentPage} onPageChanged={onPageChanged}\r\n                   pageSize={pageSize} totalItemsCount={totalUsersCount}/>\r\n        <div>\r\n            {isFetching ? <Preloader/> : null}\r\n            {users.map(u => <User user={u}\r\n                                  folowingInProgress={props.folowingInProgress}\r\n                                  unfollow={props.unfollow}\r\n                                  follow={props.follow}\r\n                                  key={u.id}\r\n                />\r\n            )}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Users","import {createSelector} from \"reselect\";\r\n\r\nconst getUsersSelector = (state) => {\r\n    return state.usersPage.users;\r\n}\r\n\r\nexport const getUsers = createSelector(getUsersSelector,\r\n    (users) => {\r\n        return users.filter(u => true);\r\n    })\r\n\r\nexport const getPageSize = (state) => {\r\n    return state.usersPage.pageSize;\r\n}\r\n\r\nexport const getTotalUsersCount = (state) => {\r\n    return state.usersPage.totalUsersCount;\r\n}\r\n\r\nexport const getCurrentPage = (state) => {\r\n    return state.usersPage.currentPage;\r\n}\r\n\r\nexport const getIsFetching = (state) => {\r\n    return state.usersPage.isFetching;\r\n}\r\n\r\nexport const getFollowingInProgress = (state) => {\r\n    return state.usersPage.folowingInProgress;\r\n}","import React from 'react'\r\nimport {connect} from 'react-redux';\r\nimport {\r\n    follow,\r\n    setCurrentPage,\r\n    unfollow,\r\n    toggleFollowingProgress,\r\n    requestUsers\r\n} from '../../redux/users-reducer';\r\nimport Users from './Users';\r\nimport {compose} from \"redux\";\r\nimport {\r\n    getCurrentPage,\r\n    getFollowingInProgress,\r\n    getIsFetching,\r\n    getPageSize,\r\n    getTotalUsersCount, getUsers\r\n} from \"../../redux/users-selectors\";\r\n\r\n\r\nclass UsersContainer extends React.Component {\r\n    componentDidMount() {\r\n        const {currentPage, pageSize} = this.props;\r\n        this.props.getUsers(currentPage, pageSize);\r\n    }\r\n\r\n    onPageChanged = (pageNumber) => {\r\n        const {pageSize} = this.props;\r\n        this.props.getUsers(pageNumber, pageSize);\r\n    }\r\n\r\n    render() {\r\n        return <>\r\n            <Users totalUsersCount={this.props.totalUsersCount}\r\n                   pageSize={this.props.pageSize}\r\n                   currentPage={this.props.currentPage}\r\n                   onPageChanged={this.onPageChanged}\r\n                   users={this.props.users}\r\n                   unfollow={this.props.unfollow}\r\n                   follow={this.props.follow}\r\n                   folowingInProgress={this.props.folowingInProgress}\r\n                   isFetching={this.props.isFetching}\r\n            />\r\n        </>\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => {\r\n    return {\r\n        users: getUsers(state),\r\n        pageSize: getPageSize(state),\r\n        totalUsersCount: getTotalUsersCount(state),\r\n        currentPage: getCurrentPage(state),\r\n        isFetching: getIsFetching(state),\r\n        folowingInProgress: getFollowingInProgress(state)\r\n    }\r\n}\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {follow, unfollow, setCurrentPage, toggleFollowingProgress, getUsers: requestUsers}),\r\n    /*withAuthRedirect*/)\r\n(UsersContainer)","import React, {useState, useEffect} from 'react';\r\n\r\nconst ProfileStatusWithHooks = (props) => {\r\n\r\n    let [editMode, setEditMode] = useState(false);\r\n    let [status, setStatus] = useState(props.status);\r\n\r\n    useEffect( () => {\r\n        setStatus(props.status);\r\n    }, [props.status])\r\n\r\n    const activateEditMode = () => {\r\n        setEditMode(true);\r\n    }\r\n\r\n    const deactivateEditMode = () => {\r\n        setEditMode(false);\r\n        props.updateStatus(status);\r\n    }\r\n\r\n    const  onStatusChange = (e) => {\r\n        setStatus(e.currentTarget.value);\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            {!editMode &&\r\n            <div>\r\n                <span onDoubleClick={activateEditMode}>\r\n                    {props.status || '----'}</span>\r\n            </div>\r\n            }\r\n            {editMode &&\r\n            <div>\r\n                <input onChange={onStatusChange} autoFocus={true}\r\n                       onBlur={deactivateEditMode} value={status}/>\r\n            </div>\r\n            }\r\n        </div>\r\n    )\r\n}\r\n\r\n\r\nexport default ProfileStatusWithHooks;","import React from 'react';\r\nimport s from './ProfileInfo.module.css';\r\nimport userPhoto from \"../../../assets/images/user.png\";\r\nimport ProfileStatusWithHooks from \"./ProfileStatusWithHooks\"\r\n\r\nconst ProfileInfo = (props) => {\r\n    const onMainPhotoSelected = (e) => {\r\n        if (e.target.files.length) {\r\n            props.savePhoto(e.target.files[0]);\r\n        }\r\n    }\r\n    return (\r\n        <div className={s.discriptionBlock}>\r\n            <div className={s.photo}>\r\n                {props.isOwner &&\r\n                <input id=\"upl\" type={\"file\"} className={s.button} onChange={onMainPhotoSelected}/>}\r\n                <label for=\"upl\">\r\n                    <img src={props.profile.photos.large || userPhoto} className={s.mainPhoto} alt={\"\"}/>\r\n                </label>\r\n            </div>\r\n            <div className={s.discription}>\r\n                <div className={s.name}>\r\n                    {props.profile.fullName}\r\n                </div>\r\n                <ProfileStatusWithHooks status={props.status} updateStatus={props.updateStatus}/>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default ProfileInfo;\r\n\r\n\r\n\r\n","import React from 'react';\r\nimport s from './Post.module.css';\r\nimport userPhoto from \"../../../../assets/images/user.png\";\r\n\r\nconst Post = (props) => {\r\n    const onClick = () => {\r\n        props.addLikes(props.id)\r\n    }\r\n\r\n    return (\r\n        <div className={s.item}>\r\n            <img className={s.img} src={userPhoto} alt={\"\"}/>\r\n            <div className={s.mes}>\r\n                {props.message}\r\n            </div>\r\n            <span className={s.likes} onClick={onClick}>\r\n                <span  className={s.count}>{props.likesCount + \" \"}</span>\r\n                likes\r\n            </span>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Post;","export const required = value => {\r\n    if (value) return undefined;\r\n\r\n    return \"Field is required\";\r\n}\r\n\r\nexport const maxLengthCreator = (maxLength) => (value) => {\r\n    if (value.length > maxLength) return `Max length is ${maxLength} symbols`;\r\n    return undefined;\r\n}","import React from \"react\";\r\nimport styles from \"./FormsControls.module.css\";\r\nimport {Field} from \"redux-form\";\r\n\r\nconst FormControl = ({input, meta: {touched, error}, children}) => {\r\n    const hasError = touched && error;\r\n    return (\r\n        <div className={styles.formControl + \" \" + (hasError ? styles.error : \"\")}>\r\n            <div>\r\n                {children}\r\n            </div>\r\n            {hasError && <span>{error}</span>}\r\n        </div>\r\n    )\r\n}\r\n\r\nexport const Textarea = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><textarea {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const Input = (props) => {\r\n    const {input, meta, child, ...restProps} = props;\r\n    return <FormControl {...props}><input {...input} {...restProps} /></FormControl>\r\n}\r\n\r\nexport const createField = (placeholder, name, validators, component, props = {}, text = \"\") => (\r\n    <div>\r\n        <Field placeholder={placeholder} name={name}\r\n               validate={validators}\r\n               component={component}\r\n               {...props}\r\n        /> {text}\r\n    </div>\r\n)","import React from 'react';\r\nimport s from './MyPosts.module.css';\r\nimport Post from './Post/Post';\r\nimport Field from \"redux-form/lib/Field\";\r\nimport reduxForm from \"redux-form/lib/reduxForm\";\r\nimport {maxLengthCreator, required} from \"../../../utils/validators/validators\";\r\nimport {Textarea} from \"../../common/FormsControls/FormsControls\";\r\n\r\nconst maxLength50 = maxLengthCreator(50);\r\n\r\nconst addNewPostForm = (props) => {\r\n    return (\r\n        <form onSubmit={props.handleSubmit}>\r\n            <div>\r\n                <Field className={s.area}\r\n                       cols=\"25\"\r\n                       rows=\"4\"\r\n                       component={Textarea}\r\n                       name=\"newPostText\"\r\n                       placeholder=\"Enter your post\"\r\n                       validate={[required, maxLength50]}\r\n                />\r\n            </div>\r\n            <div>\r\n                <button className={s.button}>Add post</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst AddNewPostForm = reduxForm({form: \"profileAddPostForm\"})(addNewPostForm)\r\n\r\n\r\nconst MyPosts = React.memo(props => {\r\n    let postsElements =\r\n        props.posts.map(p => <Post message={p.message}\r\n                                   likesCount={p.likesCount}\r\n                                   key={p.id}\r\n                                   id={p.id}\r\n                                   profile={props.profile}\r\n                                   addLikes={props.addLikes}/>)\r\n\r\n    let onAddPost = (values) => {\r\n        props.addPost(values.newPostText);\r\n        values.newPostText = \" \";\r\n    }\r\n\r\n    return (\r\n        <div className={s.postsBlock}>\r\n            <h3>My posts</h3>\r\n            <AddNewPostForm onSubmit={onAddPost}/>\r\n            <div className={s.posts}>\r\n                {postsElements}\r\n            </div>\r\n        </div>\r\n    )\r\n\r\n});\r\n\r\nexport default MyPosts;","import {profileAPI, usersAPI} from \"../api/api\";\r\n\r\nconst ADD_POST = 'ADD-POST';\r\nconst SET_USER_PROFILE = 'SET_USER_PROFILE'\r\nconst SET_STATUS = 'SET_STATUS'\r\nconst SAVE_PHOTO_SUCCESS = 'SAVE_PHOTO_SUCCESS'\r\nconst DELETE_POST = 'DELETE_POST'\r\nconst ADD_LIKES = 'ADD_LIKES'\r\n\r\n\r\nlet initialState = {\r\n    posts: [\r\n        {id: 1, message: 'It is my first post', likesCount: 12},\r\n        {id: 2, message: 'It is my website', likesCount: 1},\r\n        {id: 3, message: 'Hi, how are you?', likesCount: 21},\r\n        {id: 4, message: 'I want to become a developer', likesCount: 11},\r\n        {id: 5, message: 'Say me about you', likesCount: 1},\r\n\r\n    ],\r\n    profile: null,\r\n    status: \"\"\r\n};\r\n\r\nconst profileReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case ADD_POST: {\r\n            let newPost = {\r\n                id: 6,\r\n                message: action.newPostText,\r\n                likesCount: 0\r\n            };\r\n            return {\r\n                ...state,\r\n                posts: [...state.posts, newPost],\r\n            };\r\n        }\r\n        case SET_STATUS: {\r\n            return {\r\n                ...state,\r\n                status: action.status\r\n            }\r\n        }\r\n        case SET_USER_PROFILE: {\r\n            return {...state, profile: action.profile}\r\n        }\r\n        case SAVE_PHOTO_SUCCESS: {\r\n            return {...state, profile: {...state.profile, photos: action.photos}}\r\n        }\r\n        case DELETE_POST: {\r\n            return {...state, posts: state.posts.filter(p => p.id !== action.postId)}\r\n        }\r\n        case ADD_LIKES:\r\n            return {\r\n                ...state,\r\n                posts: state.posts.map(p => {\r\n                    if (p.id === action.postId) {\r\n                        return {...p, likesCount: p.likesCount + 1}\r\n                    }\r\n                    return p;\r\n                })\r\n            }\r\n        default:\r\n            return state;\r\n        }\r\n    }\r\n\r\n    export const addPostActionCreator = (newPostText) => ({type: ADD_POST, newPostText})\r\n    export const setUserProfile = (profile) => ({type: SET_USER_PROFILE, profile})\r\n    export const setStatus = (status) => ({type: SET_STATUS, status})\r\n    export const savePhotoSuccess = (photos) => ({type: SAVE_PHOTO_SUCCESS, photos})\r\n    export const deletePost = (postId) => ({type: DELETE_POST, postId})\r\n    export const addLikes = (postId) => ({type: ADD_LIKES, postId})\r\n\r\n    export const getUserProfile = (userId) => async (dispatch) => {\r\n        let response = await usersAPI.getProfile(userId)\r\n        dispatch(setUserProfile(response.data));\r\n\r\n    }\r\n    export const getStatus = (userId) => async (dispatch) => {\r\n        let response = await profileAPI.getStatus(userId)\r\n        dispatch(setStatus(response.data));\r\n    }\r\n\r\n    export const updateStatus = (status) => async (dispatch) => {\r\n        let response = await profileAPI.updateStatus(status)\r\n        if (response.data.resultCode === 0) {\r\n            dispatch(setStatus(status));\r\n        }\r\n    }\r\n\r\n    export const savePhoto = (file) => async (dispatch) => {\r\n        let response = await profileAPI.savePhoto(file);\r\n        dispatch(savePhotoSuccess(response.data.data.photos));\r\n\r\n    }\r\n\r\n    export default profileReducer;","import MyPosts from \"./MyPosts\";\r\nimport {addLikes, addPostActionCreator} from \"../../../redux/profile-reducer\";\r\nimport {connect} from \"react-redux\";\r\n\r\nconst mapStateToProps = (state) => {\r\n    return {\r\n        posts: state.profilePage.posts,\r\n        newPostText: state.profilePage.newPostText,\r\n        profile: state.profilePage.profile,\r\n    }\r\n}\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n    return {\r\n        addPost: (newPostText) => {\r\n            dispatch(addPostActionCreator(newPostText));\r\n        },\r\n        addLikes: (id) => {\r\n            dispatch(addLikes(id))\r\n        }\r\n    }\r\n}\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPosts);\r\n\r\nexport default MyPostsContainer;","import React from 'react';\r\nimport ProfileInfo from \"./ProfileInfo/ProfileInfo\";\r\nimport MyPostsContainer from \"./MyPosts/MyPostsContainer\";\r\nimport Preloader from \"../common/Preloader/Preloader\";\r\n\r\nconst Profile = (props) => {\r\n    if (!props.profile) {\r\n       return <Preloader />\r\n    }\r\n    return (\r\n        <div>\r\n            <ProfileInfo isOwner={props.isOwner}\r\n                         savePhoto={props.savePhoto}\r\n                         profile={props.profile}\r\n                         status={props.status}\r\n                         updateStatus={props.updateStatus}/>\r\n            <MyPostsContainer />\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Profile;","import React from 'react';\r\nimport Profile from \"./Profile\";\r\nimport {connect} from \"react-redux\";\r\nimport {getStatus, getUserProfile, savePhoto, updateStatus} from \"../../redux/profile-reducer\";\r\nimport {compose} from \"redux\";\r\nimport {withRouter} from \"react-router-dom\";\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n    refreshProfile() {\r\n        let userId = this.props.match.params.userId;\r\n        if (!userId) {\r\n            userId = this.props.authorizedUserId;\r\n                if(!userId) {\r\n                    this.props.history.push(\"/login\")\r\n                }\r\n        }\r\n        this.props.getUserProfile(userId)\r\n        this.props.getStatus(userId)\r\n    }\r\n\r\n    componentDidMount() {\r\n        this.refreshProfile()\r\n    }\r\n\r\n    componentDidUpdate(prevProps) {\r\n        if(this.props.match.params.userId !== prevProps.match.params.userId) {\r\n            this.refreshProfile()\r\n        }\r\n    }\r\n\r\n\r\n    render() {\r\n        return (\r\n            <div>\r\n                <Profile {...this.props}\r\n                         isOwner={!this.props.match.params.userId}\r\n                         profile={this.props.profile}\r\n                         status={this.props.status}\r\n                         updateStatus={this.props.updateStatus}\r\n                         savePhoto={this.props.savePhoto}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nlet mapStateToProps = (state) => ({\r\n    profile: state.profilePage.profile,\r\n    status: state.profilePage.status,\r\n    authorizedUserId: state.auth.id,\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\n\r\nexport default compose(\r\n    connect(mapStateToProps, {getUserProfile, getStatus, updateStatus, savePhoto}),\r\n    withRouter,\r\n   /* withAuthRedirect*/)\r\n(ProfileContainer);\r\n","import React from 'react';\r\nimport s from './Header.module.css';\r\nimport {NavLink} from \"react-router-dom\";\r\nimport icon from \"./../../assets/images/reactIcon.png\"\r\n\r\n\r\nconst Header = (props) => {\r\n    return <div className={s.header}>\r\n        <NavLink to=\"/profile/\" activeClassName={s.activeLink}>\r\n            <img\r\n                src={icon} alt={\"\"}/>\r\n        </NavLink>\r\n\r\n        <div className={s.loginBlock}>\r\n            {props.isAuth\r\n                ? <div>\r\n                    <NavLink to=\"/profile\" className={s.userName}>{props.login}</NavLink>\r\n                    <div onClick={props.logout} className={s.logout}>logout</div>\r\n                </div>\r\n                : <div className={s.login} >\r\n                    <NavLink to={'login'}>login</NavLink>\r\n                </div>}\r\n        </div>\r\n    </div>\r\n}\r\n\r\nexport default Header;","import {authAPI} from \"../api/api\";\r\nimport {stopSubmit} from \"redux-form\"\r\n\r\nconst SET_USER_DATA = 'auth/SET_USER_DATA';\r\n\r\nlet initialState = {\r\n    id: null,\r\n    email: null,\r\n    login: null,\r\n    isAuth: false,\r\n};\r\n\r\nconst authReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case SET_USER_DATA: {\r\n            return {\r\n                ...state,\r\n                ...action.payload\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const setAuthUserData = (id, email, login, isAuth) =>\r\n    ({type: SET_USER_DATA, payload: {id, email, login, isAuth}})\r\n\r\nexport const getAuthUserData = () => async (dispatch) => {\r\n    let response = await authAPI.me();\r\n    if (response.data.resultCode === 0) {\r\n        let {id, email, login} = response.data.data;\r\n        dispatch(setAuthUserData(id, email, login, true));\r\n    }\r\n}\r\n\r\nexport const login = (email, password, rememberMe) => async (dispatch) => {\r\n    let response = await authAPI.login(email, password, rememberMe);\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(getAuthUserData())\r\n    } else {\r\n        let message = response.data.messages.length > 0\r\n            ? response.data.messages[0] : \"Some error\"\r\n        dispatch(stopSubmit(\"login\", {_error: message}));\r\n    }\r\n}\r\n\r\nexport const logout = () => async (dispatch) => {\r\n    let response = await authAPI.logout();\r\n    if (response.data.resultCode === 0) {\r\n        dispatch(setAuthUserData(null, null, null, false));\r\n    }\r\n}\r\n\r\n\r\nexport default authReducer;","import React from 'react';\r\nimport Header from \"./Header\";\r\nimport {connect} from \"react-redux\";\r\nimport {logout} from \"../../redux/auth-reducer\";\r\n\r\n\r\nclass HeaderContainer extends React.Component {\r\n    render() {\r\n        return <Header {...this.props} />\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth,\r\n     login: state.auth.login,\r\n});\r\n\r\nexport default connect(mapStateToProps, {logout})(HeaderContainer);","import React from 'react';\r\nimport {reduxForm} from \"redux-form\";\r\nimport {createField, Input} from \"../common/FormsControls/FormsControls\";\r\nimport {required} from \"../../utils/validators/validators\";\r\nimport {connect} from \"react-redux\";\r\nimport {login} from \"../../redux/auth-reducer\";\r\nimport {Redirect} from \"react-router-dom\";\r\nimport style from \"./../common/FormsControls/FormsControls.module.css\"\r\n\r\nconst LoginForm = ({handleSubmit, error}) => {\r\n\r\n    return (\r\n        <form onSubmit={handleSubmit}>\r\n            {createField(\"Email\", \"email\", [required], Input)}\r\n            {createField(\"Password\", \"password\", [required], Input, {type: \"password\"})}\r\n            {createField(null, \"rememberMe\", [], Input, {type: \"checkbox\"}, \"remember me\")}\r\n            {error && <div className={style.formSummaryError}>\r\n                {error}\r\n            </div>\r\n            }\r\n            <div>\r\n                <button>Log In</button>\r\n            </div>\r\n        </form>\r\n    )\r\n}\r\n\r\nconst LoginReduxForm = reduxForm({form: 'login'})(LoginForm)\r\n\r\nconst Login = (props) => {\r\n    const onSubmit = (formData) => {\r\n        //props.login(formData.email, formData.password, formData.rememberMe)\r\n        props.login(\"gazzaevtimur@gmail.com\", \"timur99\", formData.rememberMe)\r\n    }\r\n\r\n    if (props.isAuth) {\r\n        return <Redirect to={\"/profile\"}/>\r\n    }\r\n    return <div>\r\n        <h1>LOGIN</h1>\r\n        <LoginReduxForm onSubmit={onSubmit}/>\r\n    </div>\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    isAuth: state.auth.isAuth\r\n})\r\n\r\nexport default connect(mapStateToProps, {login})(Login)","import {getAuthUserData} from \"./auth-reducer\";\r\n\r\nconst INITIALIZED_SUCCESS = 'INITIALIZED_SUCCESS';\r\n\r\nlet initialState = {\r\n    initialized: false,\r\n};\r\n\r\nconst appReducer = (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case INITIALIZED_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                initialized: true\r\n            }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n}\r\n\r\nexport const initializedSuccess = () => ({type: INITIALIZED_SUCCESS})\r\n\r\nexport const initializeApp = () => (dispatch) => {\r\n    let promise = dispatch(getAuthUserData());\r\n    promise.then(() => {\r\n        dispatch(initializedSuccess());\r\n    })\r\n\r\n}\r\n\r\n\r\nexport default appReducer;","\r\nlet initialState = {\r\n};\r\n\r\nconst sidebarReducer = (state = initialState, action) => {\r\n    return state;\r\n}\r\n\r\nexport default sidebarReducer;","import {applyMiddleware, combineReducers, compose, createStore} from \"redux\";\r\nimport profileReducer from \"./profile-reducer\";\r\nimport dialogsReducer from \"./dialogs-reducer\";\r\nimport sidebarReducer from \"./sidebar-reducer\";\r\nimport usersReducer from \"./users-reducer\";\r\nimport authReducer from \"./auth-reducer\";\r\nimport thunkMiddleware  from \"redux-thunk\";\r\nimport {reducer as formReducer } from 'redux-form'\r\nimport appReducer from \"./app-reducer\";\r\n\r\nlet reducers = combineReducers({\r\n    profilePage: profileReducer,\r\n    dialogsPage: dialogsReducer,\r\n    sidebar: sidebarReducer,\r\n    usersPage: usersReducer,\r\n    auth: authReducer,\r\n    form: formReducer,\r\n    app: appReducer\r\n});\r\n\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;//Chrome\r\nconst store = createStore(reducers, composeEnhancers(applyMiddleware(thunkMiddleware)));//Chrome\r\n\r\nwindow._store_ = store;\r\n\r\nexport default store;","import React from \"react\";\r\n\r\nexport const withSuspense = (Component) => {  //Ленивая загрузка компанента\r\n\r\n    return(props) => {\r\n        return <React.Suspense fallback={<div>Loading...</div>}>\r\n            <Component {...props}/>\r\n        </React.Suspense>\r\n    }\r\n\r\n}","import React from 'react';\r\nimport './App.css';\r\nimport Navbar from './components/Navbar/Navbar';\r\nimport {BrowserRouter, HashRouter, Route, withRouter} from \"react-router-dom\";\r\nimport UsersContainer from \"./components/Users/UsersContainer\";\r\nimport ProfileContainer from \"./components/Profile/ProfileContainer\";\r\nimport HeaderContainer from \"./components/Header/HeaderContainer\";\r\nimport LoginPage from \"./components/Login/Login\";\r\nimport {connect, Provider} from \"react-redux\";\r\nimport {compose} from \"redux\";\r\nimport {initializeApp} from \"./redux/app-reducer\";\r\nimport store from \"./redux/redux-store\";\r\nimport {withSuspense} from \"./hoc/withSuspense\";\r\n\r\nconst DialogsContainer = React.lazy(() => import(\"./components/Dialogs/DialogsContainer\"))\r\n\r\nclass App extends React.Component {\r\n    componentDidMount() {\r\n        this.props.initializeApp()\r\n    }\r\n\r\n    render() {\r\n        /*if(!this.props.initialized){\r\n            return <Preloader />\r\n        }*/\r\n        return (\r\n            <div className='app-wrapper'>\r\n                <HeaderContainer/>\r\n                <Navbar/>\r\n                <div className='app-wrapper-content'>\r\n                    <Route path='/dialogs'\r\n                           render={withSuspense(DialogsContainer)}/>\r\n                    <Route path='/profile/:userId?'\r\n                           render={() => <ProfileContainer/>}/>\r\n                    <Route path='/users'\r\n                           render={() => <UsersContainer/>}/>\r\n                    <Route path='/login'\r\n                           render={() => <LoginPage/>}/>\r\n\r\n                </div>\r\n            </div>\r\n\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => ({\r\n    initialized: state.app.initialized\r\n})\r\n\r\nlet AppContainer = compose(\r\n    withRouter,\r\n    connect(mapStateToProps, {initializeApp}))(App);\r\n\r\nconst MainApp = (props) => {\r\n    return <HashRouter>\r\n        <Provider store={store}>\r\n            <AppContainer/>\r\n        </Provider>\r\n    </HashRouter>\r\n}\r\n\r\nexport default MainApp;\r\n","import * as serviceWorker from './serviceWorker';\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport MainApp from \"./App\";\r\n\r\nReactDOM.render(<MainApp />, document.getElementById('root'));\r\n\r\nserviceWorker.unregister();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"discriptionBlock\":\"ProfileInfo_discriptionBlock__nHaqE\",\"photo\":\"ProfileInfo_photo__2mVUa\",\"mainPhoto\":\"ProfileInfo_mainPhoto__2Jymk\",\"button\":\"ProfileInfo_button__3nRMG\",\"name\":\"ProfileInfo_name__3zy0Q\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__2S7ee\",\"loginBlock\":\"Header_loginBlock__349YX\",\"userName\":\"Header_userName__TVQeU\",\"logout\":\"Header_logout__1U7Jq\",\"login\":\"Header_login__2ZaXp\"};","module.exports = __webpack_public_path__ + \"static/media/user.8b1dbb1f.png\";","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"Post_item__FKWLk\",\"img\":\"Post_img__21o-o\",\"mes\":\"Post_mes__td-LE\",\"likes\":\"Post_likes__LVZOU\",\"count\":\"Post_count__vNeRN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"formControl\":\"FormsControls_formControl__KJHG6\",\"error\":\"FormsControls_error__2iS7F\",\"formSummaryError\":\"FormsControls_formSummaryError__2Z5fj\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"postsBlock\":\"MyPosts_postsBlock__PVv8X\",\"posts\":\"MyPosts_posts__1_mZ_\",\"button\":\"MyPosts_button__1Fkxg\",\"area\":\"MyPosts_area__lk7I7\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"paginator\":\"Paginator_paginator__sV1Wk\",\"pageNumber\":\"Paginator_pageNumber__2hAk5\",\"selectedPage\":\"Paginator_selectedPage__to5Hh\",\"number\":\"Paginator_number__17iMq\"};"],"sourceRoot":""}